//@ Function taken from sonic3air_dev/scripts/standalone/rendering/renderhooks.lemon
function bool Standalone.onWriteToSpriteTable(s16 px, s16 py, u16 renderQueue)
{
	// "Level" counter in mini-game menu
	if (objA0.update_address == 0x04d09e)
	{
		if (MOD_BS_PLUS_ACTIVE)
		{
			py -= 0x02
			BlueSpheresTimer.TextManager.drawText(px, py, renderQueue, 0x01, STRING_MINI_GAME_LEVEL, 0x01)
			
			BlueSpheresTimer.TextManager.drawText(px - 138, py, renderQueue, 0x01, STRING_MINI_GAME_PERFECT, 0x01)
			
			string perfect_counter = stringformat("*%d*", bluespheregame.perfect_counter)
			BlueSpheresTimer.TextManager.drawText(px - 138, py + 16, renderQueue, 0x01, perfect_counter, 0x01)
			
			if ((u8[0xffffbd4c + 0x04] & 0x01) == 0x00 && (global.game_mode & 0x7f) == 0x2c && Input.buttonPressed(BUTTON_Y) && u8[0xffffffa1] != 0x00)
			{
				bluespheregame.max_gamespeed++
				if (bluespheregame.max_gamespeed > 0x01)
					bluespheregame.max_gamespeed = 0x00
			}
			
			BlueSpheresTimer.TextManager.drawText(px + 138, py, renderQueue, 0x01, STRING_MINI_GAME_MAX_SPEED, 0x01)
			
			string speed_selected = stringformat("%s", bluespheregame.max_gamespeed ? STRING_ON : STRING_OFF)
			BlueSpheresTimer.TextManager.drawText(px + 138, py + 16, renderQueue, 0x01, speed_selected, 0x01)
			BlueSpheresTimer.TextManager.drawText(px + 138, py + 16, renderQueue, 0x01, "*   *", 0x01)
			return true
		}
	}
	
	// "Start" button in mini-game menu
	if (objA0.update_address == 0x04d648)
	{
		// Render here the decor elements of the Green Sphere game menu
		if (bluespheres.greenspheres.active)
		{
			if (MOD_BS_PLUS_ACTIVE && (Mods.getModPriority("Sonic 3: D.A. Garden Edition") < Mods.getModPriority("Blue Sphere Plus")))
				Renderer.drawCustomSprite("hcz_watertint", 0x00, 0x00, 0x00, 0x00, 0x1701, 0x00, 80)
			
			Renderer.drawCustomSprite("sklogo_green", getScreenWidth() / 0x02, 40 - scrolloffset.y.planeB, 0x00, 0x00, 0x1701)
		}
		else
		{
			Renderer.drawCustomSprite("sklogo", getScreenWidth() / 0x02, 40 - scrolloffset.y.planeB, 0x00, 0x00, 0x1701)
		}
		
		// Tooltip update (Notify about unavailable achievements in mini-game mode)
		BlueSpheresTimer.TooltipManager.update()
	} 
	
	// Display HUD
	if (objA0.update_address == 0x008e2a)
	{
		// This is the best I could come up with, for a better view. If I insert it inside the script in another place, it will be invisible for about one frame before it appears
		BlueSpheresTimer.renderTimer(px, py, renderQueue)
	}
	
	// Time over text (consists of two objects)
	if ((objA0.update_address == 0x008f24 || objA0.update_address == 0x008eec) && bluespheres.timeOver)
	{
		string key = "display_text_timeover_"
		
		// "Not Enough Rings"
		if (bluespheres.notEnoughRings)
		{
			px += 0x02
			key = "display_text_notenoughrings_"
		}
		
		Renderer.drawCustomSprite(stringformat("%s%d", key, objA0.animation.sprite), px, py, 0x00, SPRITE_FLAG_PRIO, renderQueue)
		return true
	}
	
	// Special stage result + fade to main game afterwards
	if ((global.game_mode & 0x7f) == 0x48 || (global.game_mode & 0x7f) == 0x0c)
	{
		// Special stage result texts
		if (objA0.update_address == 0x02ea50)
		{
			if (SETTING_BS_TIME_BONUSES_ON_SPECIALS)
			{
				py -= 0x10
				bool isSKStage = (global.lock_on_state == 0x00 && global.sk_bluespheres)
				
				if (objA0.animation.sprite == 0x19 || objA0.animation.sprite == 0x33 || objA0.animation.sprite == 0x38)
				{
					u64 key
					if !(Mods.isModActive("Sonic Mania HUD"))
						key = isSKStage ? "hud_text_time_superstage" : "hud_text_time_chaosstage"
					else
						key = "hud_text_time"
					
					Renderer.drawCustomSprite(key, px, py, 0x00, SPRITE_FLAG_PRIO, renderQueue)
					Renderer.drawCustomSprite(isSKStage ? "hud_text_bonus_superstage" : "hud_text_bonus_chaosstage", px + 0x28, py, 0x00, SPRITE_FLAG_PRIO, renderQueue)
					HUD.drawNumber(isSKStage ? "hud_digit_%d" : "hud_digit_%d_chaosstage", bluespheres.timer.bonus * 0x0a, px + 0xb8, py, renderQueue)
					Renderer.drawCustomSprite(getCharacterBonusTextIcon(getMainCharacter()), px + 0x4d, py - 0x05, 0x00, SPRITE_FLAG_PRIO, renderQueue)
					
					py += 0x10
					Renderer.drawCustomSprite(isSKStage ? "hud_text_perfect_superstage" : "hud_text_perfect_chaosstage", px, py, 0x00, SPRITE_FLAG_PRIO, renderQueue)
					HUD.drawNumber(isSKStage ? "hud_digit_%d" : "hud_digit_%d_chaosstage", results.time_bonus * 0x0a, px + 0xb8, py, renderQueue)
					Renderer.drawCustomSprite(getCharacterBonusTextIcon(getMainCharacter()), px + 0x34, py - 0x05, 0x00, SPRITE_FLAG_PRIO, renderQueue)
					return true
				}
				else if (objA0.animation.sprite == 0x1a || objA0.animation.sprite == 0x34 || objA0.animation.sprite == 0x39)
				{
					py += 0x18
					Renderer.drawCustomSprite(isSKStage ? "hud_text_continue_superstage" : "hud_text_continue_chaosstage", px, py, 0x00, SPRITE_FLAG_PRIO, renderQueue)
					Renderer.drawCustomSprite(getCharacterBonusTextIcon(getMainCharacter()), px + 0x3c, py - 0x05, 0x00, SPRITE_FLAG_PRIO, renderQueue)
					return true
				}
			}
		}
	}
	
	// Return the base function
	return base.Standalone.onWriteToSpriteTable(px, py, renderQueue)
}