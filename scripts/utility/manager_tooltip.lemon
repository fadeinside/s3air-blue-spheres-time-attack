//? Checks whether there is available text in the variable, if there is, then show it.
function void BlueSpheresTimer.TooltipManager.update()
{
	// Define ad content
	BlueSpheresTimer.TooltipManager.showRandomAds()
	
	// Tooltip show
	if (bluespheres.tooltip.show != "")
	{
		if (bluespheres.tooltip.faster)
			bluespheres.tooltip.timeout += 0x02
		
		// Tooltip with two sheets
		if (bluespheres.tooltip.show_next != "")
		{
			BlueSpheresTimer.Menu.tooltip.setup(bluespheres.tooltip.color, bluespheres.tooltip.icon, (bluespheres.tooltip.timeout >= (SETTING_BS_TOAST_DURATION / 0x02)) ? bluespheres.tooltip.show_next : bluespheres.tooltip.show)
			return
		}
		
		// Tooltip with one sheet
		BlueSpheresTimer.Menu.tooltip.setup(bluespheres.tooltip.color, bluespheres.tooltip.icon, bluespheres.tooltip.show)
	}
}

//? Resets tooltip variables, applies appearance, and sets the text.
function void BlueSpheresTimer.TooltipManager.setupTooltip(u8 faster, string color, string icon, string title, string title_next)
{
	// Do not render other tooltips if ads are currently showing
	if (BlueSpheresTimer.TooltipManager.isAds())
		return
	
	// Reset the tooltip if it was in the process
	BlueSpheresTimer.TooltipManager.resetTooltip()
	
	// Setup appearance
	bluespheres.tooltip.icon = icon
	bluespheres.tooltip.color = color
	bluespheres.tooltip.faster = faster
	
	// Setup text
	bluespheres.tooltip.show = title
	bluespheres.tooltip.show_next = title_next
}

//? Resets tooltip variables.
function void BlueSpheresTimer.TooltipManager.resetTooltip()
{
	// Do not reset the tooltip if it is an advertisement
	if (BlueSpheresTimer.TooltipManager.isAds())
		return
	
	// Identify a random number until an ad is shown
	if (bluespheres.tooltip.sessionADS && bluespheres.tooltip.showADS != 0xffff)
		global.level_random_base = System.rand() % 920
	
	// Reset appearance
	bluespheres.tooltip.show = ""
	bluespheres.tooltip.show_next = ""
	bluespheres.tooltip.icon = ""
	bluespheres.tooltip.color = ""
	
	// Reset variables
	bluespheres.tooltip.state = 0x00
	bluespheres.tooltip.frames = 0x00
	bluespheres.tooltip.timeout = 0x00
	
	bluespheres.tooltip.faster = 0x00
}

//? Determines which ad should be shown based on the range of random numbers.
function void BlueSpheresTimer.TooltipManager.showRandomAds()
{
	if !(bluespheres.tooltip.sessionADS)
		return
	
	if (bluespheres.tooltip.showADS != 0x00)
		return
	
	if (global.level_random_base >= 32 && global.level_random_base <= 33)
	{
		// Setup text
		bluespheres.tooltip.show = STRING_TOOLTIP_ADS_RATE_1
		bluespheres.tooltip.show_next = STRING_TOOLTIP_ADS_RATE_2
		
		// Set random number
		bluespheres.tooltip.showADS = global.level_random_base 
	}
	
	if (global.level_random_base >= 56 && global.level_random_base <= 57)
	{
		// Setup text
		bluespheres.tooltip.show = STRING_TOOLTIP_ADS_BUG_1
		bluespheres.tooltip.show_next = STRING_TOOLTIP_ADS_BUG_2
		
		// Set random number
		bluespheres.tooltip.showADS = global.level_random_base
	}
	
	if (global.level_random_base >= 208 && global.level_random_base <= 209)
	{
		// Setup text
		bluespheres.tooltip.show = STRING_TOOLTIP_ADS_REPO_1
		bluespheres.tooltip.show_next = STRING_TOOLTIP_ADS_REPO_2
		
		// Set random number
		bluespheres.tooltip.showADS = global.level_random_base
	}
	
	if (bluespheres.tooltip.showADS != 0x00)
	{
		// Setup appearance
		bluespheres.tooltip.icon = "icon_tooltip_point"
		bluespheres.tooltip.color = "gray"
		bluespheres.tooltip.faster = 0x00
	}
}

//? Returns true if an ad is currently showing.
function bool BlueSpheresTimer.TooltipManager.isAds()
{
	// Ads are not shown in this session
	if !(bluespheres.tooltip.sessionADS)
		return false
	
	// Hidden after the show
	if (bluespheres.tooltip.showADS == 0xffff)
		return false
	// Now shows
	else if (bluespheres.tooltip.showADS != 0x00)
		return true
	else
		return false
}