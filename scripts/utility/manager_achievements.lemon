//? Sets the Completed status of the specified Achievement ID's in case of matches
function void BlueSpheresTimer.Achievements.setup()
{
	// Ignore for Rolling Demo and Blue Sphere game
	if (global.game_mode == 0x08 || bluespheres.minigame_mode)
		return
	
	// Ignore for Main Special stages if Achievements disabled
	if (SETTING_BS_ACHIEVEMENTS_ENABLE == 0x00 && !bluespheres.timeattack.active && !(global.game_mode >= 0x85 && global.game_mode <= 0xff))
		return
	
	if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_GET_100_BLUE_SPHERES) >= 100)
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_GET_100_BLUE_SPHERES)
	if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_GET_300_BLUE_SPHERES) >= 300)
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_GET_300_BLUE_SPHERES)
	if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_GET_600_BLUE_SPHERES) >= 600)
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_GET_600_BLUE_SPHERES)
	if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_GET_1200_BLUE_SPHERES) >= 1200)
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_GET_1200_BLUE_SPHERES)
	if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_GET_2048_BLUE_SPHERES) >= 2048)
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_GET_2048_BLUE_SPHERES)
		
	if (bluespheres.gameOver && bluespheres.blue_remaining == 0x01)
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_RAN_INTO_RED_SPHERE)
	if (bluespheres.gameOver && bluespheres.timer.currentTime == 30)
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_RAN_INTO_RED_SPHERE2)
		
	if (Mods.isModActive("Sonic 3: D.A. Garden Edition"))
	{
		if (global.game_mode == 0x34 || bluespheres.tempValue1 == 0x07 || BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_DA_GARDEN_EDITION) == 0xfa1)
		{
			bluespheres.tempValue1 = 0x07
			BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_DA_GARDEN_EDITION)
		}
		
		if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_GREEN_SPHERE) >= 0x01)
			BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_GREEN_SPHERE)
		if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_CONVERT_50_GREEN_SPHERES) >= 50)
			BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_CONVERT_50_GREEN_SPHERES)
		if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_CONVERT_150_GREEN_SPHERES) >= 150)
			BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_CONVERT_150_GREEN_SPHERES)
			if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_CONVERT_400_GREEN_SPHERES) >= 400)
			BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_CONVERT_400_GREEN_SPHERES)
		if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_CONVERT_720_GREEN_SPHERES) >= 720)
			BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_CONVERT_720_GREEN_SPHERES)
		if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_CONVERT_1200_GREEN_SPHERES ) >= 1200)
			BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_CONVERT_1200_GREEN_SPHERES)
	}
	
	if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_BOUNCE_OFF_15_TIMES) >= 15)
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_BOUNCE_OFF_15_TIMES)
	if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_BOUNCE_OFF_55_TIMES) >= 55)
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_BOUNCE_OFF_55_TIMES)
	if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_BOUNCE_OFF_150_TIMES) >= 150)
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_BOUNCE_OFF_150_TIMES)
		
	if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_USE_YELLOW_SPHERE_15_TIMES) >= 15)
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_USE_YELLOW_SPHERE_15_TIMES)
	if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_USE_YELLOW_SPHERE_45_TIMES) >= 45)
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_USE_YELLOW_SPHERE_45_TIMES)
	if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_USE_YELLOW_SPHERE_110_TIMES) >= 110)
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_USE_YELLOW_SPHERE_110_TIMES)
		
	if (Mods.isModActive("No Blue Spheres Slowdown") && BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_YOU_ARE_TOO_SLOW) >= 0x07)
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_YOU_ARE_TOO_SLOW)
		
	if (BlueSpheresTimer.Emeralds.allEqual(0x03))
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_ACTIVATED_SUPER_EMERALDS)
	if (BlueSpheresTimer.Emeralds.getStatus(0x00) >= 0x01 && BlueSpheresTimer.Emeralds.getStatus(0x01) >= 0x01 && BlueSpheresTimer.Emeralds.getStatus(0x02) >= 0x01 && BlueSpheresTimer.Emeralds.getStatus(0x03) >= 0x01 && BlueSpheresTimer.Emeralds.getStatus(0x04) >= 0x01 && BlueSpheresTimer.Emeralds.getStatus(0x05) >= 0x01 && BlueSpheresTimer.Emeralds.getStatus(0x06) >= 0x01)
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_ALL_CHAOS_EMERALDS)
		
	if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_JUMP_50_TIMES) >= 50)
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_JUMP_50_TIMES)
	if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_JUMP_200_TIMES) >= 200)
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_JUMP_200_TIMES)
	if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_JUMP_500_TIMES) >= 500)
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_JUMP_500_TIMES)
	if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_JUMP_1000_TIMES) >= 1000)
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_JUMP_1000_TIMES)
	
	if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_COLLECT_400_RINGS) >= 400)
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_COLLECT_400_RINGS)
	if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_COLLECT_800_RINGS) >= 800)
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_COLLECT_800_RINGS)
	if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_COLLECT_1200_RINGS) >= 1200)
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_COLLECT_1200_RINGS)
	if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_COLLECT_2000_RINGS) >= 2000)
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_COLLECT_2000_RINGS)
	if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_COLLECT_4000_RINGS) >= 4000) // 4000 this is literally one step up to the limit, which is 0xfa1
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_COLLECT_4000_RINGS)
	
	if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_GET_5_CONTINUES) >= 5)
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_GET_5_CONTINUES)
	if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_GET_15_CONTINUES) >= 15)
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_GET_15_CONTINUES)
	if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_GET_30_CONTINUES) >= 30)
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_GET_30_CONTINUES)
	if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_GET_50_CONTINUES) >= 50)
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_GET_50_CONTINUES)
		
	if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_10) >= 10)
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_10)
	if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_50) >= 50)
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_50)
	if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_100) >= 100)
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_100)
	if (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_220) >= 220)
		BlueSpheresTimer.Achievements.setComplete(ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_220)
}

//? Checks when the blue sphere is collected.
function void BlueSpheresTimer.Achievements.blueCollectedChecks()
{
	// Ignore for Rolling Demo and Blue Sphere game
	if (global.game_mode == 0x08 || bluespheres.minigame_mode)
		return
	
	// Ignore for Main Special stages if Achievements disabled
	if (SETTING_BS_ACHIEVEMENTS_ENABLE == 0x00 && !bluespheres.timeattack.active && !(global.game_mode >= 0x85 && global.game_mode <= 0xff))
		return
	
	if !(BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_GET_100_BLUE_SPHERES))
		BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_GET_100_BLUE_SPHERES, 0x01)
	if (!BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_GET_300_BLUE_SPHERES) && BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_GET_100_BLUE_SPHERES))
		BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_GET_300_BLUE_SPHERES, 0x01)
	if (!BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_GET_600_BLUE_SPHERES) && BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_GET_300_BLUE_SPHERES))
		BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_GET_600_BLUE_SPHERES, 0x01)
	if (!BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_GET_1200_BLUE_SPHERES) && BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_GET_600_BLUE_SPHERES))
		BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_GET_1200_BLUE_SPHERES, 0x01)
	if (!BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_GET_2048_BLUE_SPHERES) && BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_GET_1200_BLUE_SPHERES))
		BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_GET_2048_BLUE_SPHERES, 0x01)
		
	if (Mods.isModActive("No Blue Spheres Slowdown") && !BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_YOU_ARE_TOO_SLOW) && bluespheres.blue_remaining <= 0x01)
		BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_YOU_ARE_TOO_SLOW, 0x01)
}

//? Checking the matches of the player's actions, and sets a new value for the specified Achievement ID's.
function void BlueSpheresTimer.Achievements.characterActionsCheck()
{
	// Ignore for Rolling Demo and Blue Sphere game
	if (global.game_mode == 0x08 || bluespheres.minigame_mode)
		return
	
	// Ignore for Main Special stages if Achievements disabled
	if (SETTING_BS_ACHIEVEMENTS_ENABLE == 0x00 && !bluespheres.timeattack.active && !(global.game_mode >= 0x85 && global.game_mode <= 0xff))
		return
		
	A1 = 0xfffff100
	D0.u16 = ((bluespheres.position.x + 0x80) >> 0x08) & 0x1f
	D1.u16 = ((bluespheres.position.y + 0x80) >> 0x08) & 0x1f
	D1.u16 <<= 0x05
	D1.u8 |= D0.u8
	A1 += D1.s16
	
	// Jump achievements check
	if ((u8[0xffffe432] & 0x80) == 0x00 && u8[0xffffe44c] == 0x00 && (control.pad1.pressed & CONTROL_ABC))
	{
		if !(BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_JUMP_50_TIMES))
			BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_JUMP_50_TIMES, 0x01)
		if (!BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_JUMP_200_TIMES) && BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_JUMP_50_TIMES))
			BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_JUMP_200_TIMES, 0x01)
		if (!BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_JUMP_500_TIMES) && BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_JUMP_200_TIMES))
			BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_JUMP_500_TIMES, 0x01)
		if (!BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_JUMP_1000_TIMES) && BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_JUMP_500_TIMES))
			BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_JUMP_1000_TIMES, 0x01)
		
		// Red sphere achievements checks
		if (u8[A1] == 0x01)
		{
			if !(BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_10))
				BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_10, 0x01)
			if (!BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_50) && BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_10))
				BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_50, 0x01)
			if (!BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_100) && BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_50))
				BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_100, 0x01)
			if (!BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_220) && BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_100))
				BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_220, 0x01)
		}
	}
	
	// Continue achievements checks
	if (bluespheres.rings_collected >= 50 && (bluespheres.rings_flags & 0x01) && !bluespheres.continue_granted)
	{
		if !(BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_GET_5_CONTINUES))
			BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_GET_5_CONTINUES, 0x01)
		if (!BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_GET_15_CONTINUES) && BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_GET_5_CONTINUES))
			BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_GET_15_CONTINUES, 0x01)
		if (!BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_GET_30_CONTINUES) && BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_GET_15_CONTINUES))
			BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_GET_30_CONTINUES, 0x01)
		if (!BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_GET_50_CONTINUES) && BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_GET_30_CONTINUES))
			BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_GET_50_CONTINUES, 0x01)
		
		// Letting us know that Continue has been obtained to avoid infinitely adding value to the achievement
		bluespheres.continue_granted = 0x01
	}
}

//? Checks for matches of touched spheres, and sets a new value for the specified Achievement ID's.
function void BlueSpheresTimer.Achievements.spheresChecks()
{
	// Ignore for Rolling Demo and Blue Sphere game
	if (global.game_mode == 0x08 || bluespheres.minigame_mode)
		return
	
	// Ignore for Main Special stages if Achievements disabled
	if (SETTING_BS_ACHIEVEMENTS_ENABLE == 0x00 && !bluespheres.timeattack.active && !(global.game_mode >= 0x85 && global.game_mode <= 0xff))
		return
	
	A1 = 0xfffff100
	D0.u16 = ((bluespheres.position.x + 0x80) >> 0x08) & 0x1f
	D1.u16 = ((bluespheres.position.y + 0x80) >> 0x08) & 0x1f
	D1.u16 <<= 0x05
	D1.u8 |= D0.u8
	A1 += D1.s16
	
	// Ring achievements checks
	if (u8[A1] == 0x04 && (bluespheres.rings_flags & 0x80))
	{
		if !(BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_COLLECT_400_RINGS))
			BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_COLLECT_400_RINGS, 0x01)
		if (!BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_COLLECT_800_RINGS) && BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_COLLECT_400_RINGS))
			BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_COLLECT_800_RINGS, 0x01)
		if (!BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_COLLECT_1200_RINGS) && BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_COLLECT_800_RINGS))
			BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_COLLECT_1200_RINGS, 0x01)
		if (!BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_COLLECT_2000_RINGS) && BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_COLLECT_1200_RINGS))
			BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_COLLECT_2000_RINGS, 0x01)
		if (!BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_COLLECT_4000_RINGS) && BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_COLLECT_2000_RINGS))
			BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_COLLECT_4000_RINGS, 0x01)
	}
	
	// Bumper achievements checks
	if (u8[A1] == 0x03 && u8[0xffffe42b] == 0x00)
	{
		if !(BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_BOUNCE_OFF_15_TIMES))
			BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_BOUNCE_OFF_15_TIMES, 0x01)
		if (!BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_BOUNCE_OFF_55_TIMES) && BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_BOUNCE_OFF_15_TIMES))
			BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_BOUNCE_OFF_55_TIMES, 0x01)
		if (!BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_BOUNCE_OFF_150_TIMES) && BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_BOUNCE_OFF_55_TIMES))
			BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_BOUNCE_OFF_150_TIMES, 0x01)
	}
	
	// Yellow sphere achievements checks
	if ((u8[A1] == 0x05 && (u8[0xffffef7c] && 0x01) == 0x00) && (u8[0xffffe44c] == 0x00 && (u8[0xffffe432] & 0x80) == 0x00) && ((bluespheres.direction & 0x3f) == 0x00))
	{
		if !(BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_USE_YELLOW_SPHERE_15_TIMES))
			BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_USE_YELLOW_SPHERE_15_TIMES, 0x01)
		if (!BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_USE_YELLOW_SPHERE_45_TIMES) && BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_USE_YELLOW_SPHERE_15_TIMES))
			BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_USE_YELLOW_SPHERE_45_TIMES, 0x01)
		if (!BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_USE_YELLOW_SPHERE_110_TIMES) && BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_USE_YELLOW_SPHERE_45_TIMES))
			BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_USE_YELLOW_SPHERE_110_TIMES, 0x01)
	}
	
	// D.A. Garden Green sphere achievements checks
	if (u8[A1] == 0x05 && (u8[0xffffef7c] && 0x01) == 0x01)
	{
		if !(BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_GREEN_SPHERE))
			BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_GREEN_SPHERE, 0x01)
		if (!BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_CONVERT_50_GREEN_SPHERES) && BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_GREEN_SPHERE))
			BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_CONVERT_50_GREEN_SPHERES, 0x01)
		if (!BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_CONVERT_150_GREEN_SPHERES) && BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_CONVERT_50_GREEN_SPHERES))
			BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_CONVERT_150_GREEN_SPHERES, 0x01)
		if (!BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_CONVERT_400_GREEN_SPHERES) && BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_CONVERT_150_GREEN_SPHERES))
			BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_CONVERT_400_GREEN_SPHERES, 0x01)
		if (!BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_CONVERT_720_GREEN_SPHERES) && BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_CONVERT_400_GREEN_SPHERES))
			BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_CONVERT_720_GREEN_SPHERES, 0x01)
		if (!BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_CONVERT_1200_GREEN_SPHERES) && BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_CONVERT_720_GREEN_SPHERES))
			BlueSpheresTimer.Achievements.addValue(ACHIEVEMENT_BS_CONVERT_1200_GREEN_SPHERES, 0x01)
	}
}

//? Returns the title of the specified Achievement ID.
function u64 BlueSpheresTimer.Achievements.getTitle(u32 achievementId)
{
	u64 achievementTitle
	
	if (achievementId == ACHIEVEMENT_BS_GET_100_BLUE_SPHERES)
	{
		achievementTitle = (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_GET_100_BLUE_SPHERES) >= 0x01) ? STRING_ACHIEVEMENT_BS_GET_100_BLUE_SPHERES : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_GET_300_BLUE_SPHERES)
	{
		achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_GET_100_BLUE_SPHERES) ? STRING_ACHIEVEMENT_BS_GET_300_BLUE_SPHERES : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_GET_600_BLUE_SPHERES)
	{
		achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_GET_300_BLUE_SPHERES) ? STRING_ACHIEVEMENT_BS_GET_600_BLUE_SPHERES : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_GET_1200_BLUE_SPHERES)
	{
		achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_GET_600_BLUE_SPHERES) ? STRING_ACHIEVEMENT_BS_GET_1200_BLUE_SPHERES : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_GET_2048_BLUE_SPHERES)
	{
		achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_GET_1200_BLUE_SPHERES) ? STRING_ACHIEVEMENT_BS_GET_2048_BLUE_SPHERES : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_RAN_INTO_RED_SPHERE)
	{
		achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_RAN_INTO_RED_SPHERE) ? STRING_ACHIEVEMENT_BS_RAN_INTO_RED_SPHERE : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_RAN_INTO_RED_SPHERE2)
	{
		achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_RAN_INTO_RED_SPHERE2) ? STRING_ACHIEVEMENT_BS_RAN_INTO_RED_SPHERE2 : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId >= ACHIEVEMENT_BS_DA_GARDEN_EDITION && achievementId <= ACHIEVEMENT_BS_CONVERT_1200_GREEN_SPHERES)
	{
		bool targetMod_active = Mods.isModActive("Sonic 3: D.A. Garden Edition")
		if (achievementId == ACHIEVEMENT_BS_DA_GARDEN_EDITION)
		{
			achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_DA_GARDEN_EDITION) ? STRING_ACHIEVEMENT_BS_DA_GARDEN_EDITION : (targetMod_active ? STRING_ACHIEVEMENTS_LOCKED : STRING_ACHIEVEMENTS_MOD_REQUIRE)
		}
		else if (achievementId == ACHIEVEMENT_BS_GREEN_SPHERE)
		{
			achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_GREEN_SPHERE) ? STRING_ACHIEVEMENT_BS_GREEN_SPHERE : (targetMod_active ? STRING_ACHIEVEMENTS_LOCKED : STRING_ACHIEVEMENTS_MOD_REQUIRE)
		}
		else if (achievementId == ACHIEVEMENT_BS_CONVERT_50_GREEN_SPHERES)
		{
			achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_GREEN_SPHERE) ? STRING_ACHIEVEMENT_BS_CONVERT_50_GREEN_SPHERES : (targetMod_active ? STRING_ACHIEVEMENTS_LOCKED : STRING_ACHIEVEMENTS_MOD_REQUIRE)
		}
		else if (achievementId == ACHIEVEMENT_BS_CONVERT_150_GREEN_SPHERES)
		 {
			achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_CONVERT_50_GREEN_SPHERES) ? STRING_ACHIEVEMENT_BS_CONVERT_150_GREEN_SPHERES : (targetMod_active ? STRING_ACHIEVEMENTS_LOCKED : STRING_ACHIEVEMENTS_MOD_REQUIRE)
		}
		else if (achievementId == ACHIEVEMENT_BS_CONVERT_400_GREEN_SPHERES)
		{
			achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_CONVERT_150_GREEN_SPHERES) ? STRING_ACHIEVEMENT_BS_CONVERT_400_GREEN_SPHERES : (targetMod_active ? STRING_ACHIEVEMENTS_LOCKED : STRING_ACHIEVEMENTS_MOD_REQUIRE)
		}
		else if (achievementId == ACHIEVEMENT_BS_CONVERT_720_GREEN_SPHERES)
		{
			achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_CONVERT_400_GREEN_SPHERES) ? STRING_ACHIEVEMENT_BS_CONVERT_720_GREEN_SPHERES : (targetMod_active ? STRING_ACHIEVEMENTS_LOCKED : STRING_ACHIEVEMENTS_MOD_REQUIRE)
		}
		else if (achievementId == ACHIEVEMENT_BS_CONVERT_1200_GREEN_SPHERES)
		{
			achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_CONVERT_720_GREEN_SPHERES) ? STRING_ACHIEVEMENT_BS_CONVERT_1200_GREEN_SPHERES : (targetMod_active ? STRING_ACHIEVEMENTS_LOCKED : STRING_ACHIEVEMENTS_MOD_REQUIRE)
		}
	}
	else if (achievementId == ACHIEVEMENT_BS_BOUNCE_OFF_15_TIMES)
	{
		achievementTitle = (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_BOUNCE_OFF_15_TIMES) >= 0x01) ? STRING_ACHIEVEMENT_BS_BOUNCE_OFF_15_TIMES : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_BOUNCE_OFF_55_TIMES)
	{
		achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_BOUNCE_OFF_15_TIMES) ? STRING_ACHIEVEMENT_BS_BOUNCE_OFF_55_TIMES : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_BOUNCE_OFF_150_TIMES)
	{
		achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_BOUNCE_OFF_55_TIMES) ? STRING_ACHIEVEMENT_BS_BOUNCE_OFF_150_TIMES : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_USE_YELLOW_SPHERE_15_TIMES)
	{
		achievementTitle = (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_USE_YELLOW_SPHERE_15_TIMES) >= 0x01) ? STRING_ACHIEVEMENT_BS_USE_YELLOW_SPHERE_15_TIMES : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_USE_YELLOW_SPHERE_45_TIMES)
	{
		achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_USE_YELLOW_SPHERE_15_TIMES) ? STRING_ACHIEVEMENT_BS_USE_YELLOW_SPHERE_45_TIMES : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_USE_YELLOW_SPHERE_110_TIMES)
	{
		achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_USE_YELLOW_SPHERE_45_TIMES) ? STRING_ACHIEVEMENT_BS_USE_YELLOW_SPHERE_110_TIMES : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_YOU_ARE_TOO_SLOW)
	{
		bool targetMod_active = Mods.isModActive("No Blue Spheres Slowdown")
		achievementTitle = (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_YOU_ARE_TOO_SLOW) >= 0x01) ? STRING_ACHIEVEMENT_BS_YOU_ARE_TOO_SLOW : (targetMod_active ? STRING_ACHIEVEMENTS_LOCKED : STRING_ACHIEVEMENTS_MOD_REQUIRE)
	}
	else if (achievementId == ACHIEVEMENT_BS_ACTIVATED_SUPER_EMERALDS)
	{
		achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_ACTIVATED_SUPER_EMERALDS) ? STRING_ACHIEVEMENT_BS_ACTIVATED_SUPER_EMERALDS : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_ALL_CHAOS_EMERALDS)
	{
		achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_ALL_CHAOS_EMERALDS) ? STRING_ACHIEVEMENT_BS_ALL_CHAOS_EMERALDS : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_JUMP_50_TIMES)
	{
		achievementTitle = (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_JUMP_50_TIMES) >= 0x01) ? STRING_ACHIEVEMENT_BS_JUMP_50_TIMES : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_JUMP_200_TIMES)
	{
		achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_JUMP_50_TIMES) ? STRING_ACHIEVEMENT_BS_JUMP_200_TIMES : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_JUMP_500_TIMES)
	{
		achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_JUMP_200_TIMES) ? STRING_ACHIEVEMENT_BS_JUMP_500_TIMES : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_JUMP_1000_TIMES)
	{
		achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_JUMP_500_TIMES) ? STRING_ACHIEVEMENT_BS_JUMP_1000_TIMES : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_COLLECT_400_RINGS)
	{
		achievementTitle = (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_COLLECT_400_RINGS) >= 0x01) ? STRING_ACHIEVEMENT_BS_COLLECT_400_RINGS : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_COLLECT_800_RINGS)
	{
		achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_COLLECT_400_RINGS) ? STRING_ACHIEVEMENT_BS_COLLECT_800_RINGS : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_COLLECT_1200_RINGS)
	{
		achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_COLLECT_800_RINGS) ? STRING_ACHIEVEMENT_BS_COLLECT_1200_RINGS : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_COLLECT_2000_RINGS)
	{
		achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_COLLECT_1200_RINGS) ? STRING_ACHIEVEMENT_BS_COLLECT_2000_RINGS : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_COLLECT_4000_RINGS)
	{
		achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_COLLECT_2000_RINGS) ? STRING_ACHIEVEMENT_BS_COLLECT_4000_RINGS : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_GET_5_CONTINUES)
	{
		achievementTitle = (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_GET_5_CONTINUES) >= 0x01) ? STRING_ACHIEVEMENT_BS_GET_5_CONTINUES : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_GET_15_CONTINUES)
	{
		achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_GET_5_CONTINUES) ? STRING_ACHIEVEMENT_BS_GET_15_CONTINUES : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_GET_30_CONTINUES)
	{
		achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_GET_15_CONTINUES) ? STRING_ACHIEVEMENT_BS_GET_30_CONTINUES : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_GET_50_CONTINUES)
	{
		achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_GET_30_CONTINUES) ? STRING_ACHIEVEMENT_BS_GET_50_CONTINUES : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_10)
	{
		achievementTitle = (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_10) >= 0x01) ? STRING_ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_10 : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_50)
	{
		achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_10) ? STRING_ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_50 : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_100)
	{
		achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_50) ? STRING_ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_100 : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_220)
	{
		achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_100) ? STRING_ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_220 : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_ACHIEVE_5_CHALLENGES)
	{
		achievementTitle = BlueSpheresTimer.Achievements.isComplete(ACHIEVEMENT_BS_ACHIEVE_5_CHALLENGES) ? STRING_ACHIEVEMENT_BS_ACHIEVE_5_CHALLENGES : STRING_ACHIEVEMENTS_LOCKED
	}
	else if (achievementId == ACHIEVEMENT_BS_ACHIEVE_10_ACHIEVEMENTS)
	{
		achievementTitle = (BlueSpheresTimer.Achievements.getValue(ACHIEVEMENT_BS_ACHIEVE_10_ACHIEVEMENTS) >= 0x01) ? STRING_ACHIEVEMENT_BS_ACHIEVE_10_ACHIEVEMENTS : STRING_ACHIEVEMENTS_LOCKED
	}
	else
	{
		achievementTitle = STRING_ACHIEVEMENTS_UNKNOWN
	}
	
	return achievementTitle
}

//? Returns the total score of all Achievements.
function s32 BlueSpheresTimer.Achievements.getScore()
{
	s32 score_total
	
	// Total number of Achievements
	for (u8 A = 0x00; A <= bluespheres.achievements.total; ++A)
	{
		// Parse the tag into separate characters
		for (s32 B = 0x00; B < strlen(BlueSpheresTimer.Achievements.getTags(A)); ++B)
		{
			s32 tag = getchar(BlueSpheresTimer.Achievements.getTags(A), B)
			if (BlueSpheresTimer.Achievements.isComplete(A))
			{
				if (tag == getChar("2"))
					score_total += 3 // Common: 30
				else if (tag == getChar("3"))
					score_total += 20 // Hard: 200
				else if (tag == getChar("4"))
					score_total += 30 // Special: 300
				else if (tag == getChar("5"))
					score_total += 35 // Unique: 350
				else if (tag == getChar("6"))
					score_total += 10 // Rate: 100
				else if (tag == getChar("7"))
					score_total += 15 // Super rate: 150
				else if (tag == getChar("8"))
					score_total += 50 // Challenge: 500
				else if (tag == getChar("9"))
					score_total += 2 // Easy: 10
			}
		}
	}
	
	// Return the value
	return score_total * 0x0a
}

//? Return the assembled memory address for the specified Achievement ID.
function u32 BlueSpheresTimer.Achievements.getAddress(u32 achievementId)
{
	u32 achievement = 0x16 * (achievementId + 0x01)
	
	// Return the assembled address
	return bluespheres.achievementsDataAddress + achievement
}

//? Returns the value for the specified Achievement ID.
function s32 BlueSpheresTimer.Achievements.getValue(u32 achievementId)
{
	u32 achievementOffset = BlueSpheresTimer.Achievements.getAddress(achievementId)
	System.loadPersistentData(achievementOffset, stringformat("SRAM_BlueSpheresTimer_Achievement_0x%06x", achievementOffset), 0x04)
	
	// Return the value
	return s32[achievementOffset]
}

//? Sets a new value for the specified Achievement ID.
function void BlueSpheresTimer.Achievements.setValue(u32 achievementId, s32 value)
{
	u32 achievementOffset = BlueSpheresTimer.Achievements.getAddress(achievementId)
	s32[achievementOffset] = value
	
	System.savePersistentData(achievementOffset, stringformat("SRAM_BlueSpheresTimer_Achievement_0x%06x", achievementOffset), 0x04)
	
	//System.writeDisplayLine(stringformat("Set new value to Achievement 0x%04x and saved in 0x%06x RAM", achievementId, achievementOffset))
}

//? Add value for the specified Achievement ID.
function void BlueSpheresTimer.Achievements.addValue(u32 achievementId, s32 value)
{
	u32 achievementOffset = BlueSpheresTimer.Achievements.getAddress(achievementId)
	s32 math = BlueSpheresTimer.Achievements.getValue(achievementId) + value
	s32[achievementOffset] = math
	
	System.savePersistentData(achievementOffset, stringformat("SRAM_BlueSpheresTimer_Achievement_0x%06x", achievementOffset), 0x04)
	
	//System.writeDisplayLine(stringformat("Added value to Achievement 0x%04x and saved in 0x%06x RAM", achievementId, achievementOffset))
}

//? Returns true when the specified Achievement ID has the status Completed.
function bool BlueSpheresTimer.Achievements.isComplete(u32 achievementId)
{
	bool isComplete
	
	if (BlueSpheresTimer.Achievements.getValue(achievementId) == 0xfa1 || BlueSpheresTimer.Achievements.getValue(achievementId) == 0xfa2)
		isComplete = true
	else
		isComplete = false
	
	return isComplete
}

//? Assigns the status Completed to the specified Achievement ID, and toast.
function void BlueSpheresTimer.Achievements.setComplete(u32 achievementId)
{
	if !(SETTING_BS_ACHIEVEMENT_TOAST_ENABLE)
	{
		BlueSpheresTimer.Achievements.setValue(achievementId, 0xfa2)
		return
	}
	
	if (BlueSpheresTimer.Achievements.isComplete(achievementId))
	{
		BlueSpheresTimer.Achievements.toast(achievementId)
		return
	}
	
	BlueSpheresTimer.Achievements.setValue(achievementId, 0xfa1)
	//System.writeDisplayLine(stringformat("Achievement 0x%04x complete and saved in 0x%06x RAM", achievementId, BlueSpheresTimer.Achievements.getAddress( achievementId)))
}

//? Show toast when the specified Achievement ID is complete.
function void BlueSpheresTimer.Achievements.toast(u32 achievementId)
{
	// Check if need to show a toast for achievement
	if (BlueSpheresTimer.Achievements.getValue(achievementId) == 0xfa1)
	{
		// Show toast if it doesn't show anything or shows a specified achievement
		if (bluespheres.toast.show == "" || bluespheres.toast.show == BlueSpheresTimer.Achievements.getTitle(achievementId))
		{
			bluespheres.toast.show = BlueSpheresTimer.Achievements.getTitle(achievementId)
			
			u64 achievementTitle = (bluespheres.toast.timeout >= (SETTING_BS_TOAST_DURATION / 0x02)) ? BlueSpheresTimer.Achievements.getTitle(achievementId) : STRING_ACHIEVEMENTS_TOAST_COMPLETE
			BlueSpheresTimer.Menu.toast.setup(achievementTitle)
		}
	}
	
	// If the specified achievement does not require a toast and it is not equal to the current one shown, then ignore
	if (BlueSpheresTimer.Achievements.getValue(achievementId) == 0xfa2 && bluespheres.toast.show != BlueSpheresTimer.Achievements.getTitle(achievementId))
		return
	
	// If the specified achievement is equal to the current one shown and the state of the toast is equal to 0x04
	if (bluespheres.toast.show == BlueSpheresTimer.Achievements.getTitle(achievementId) && bluespheres.toast.state == 0x04)
	{
		// If the specified achievement is fully completed, then reset the shown toast
		if (BlueSpheresTimer.Achievements.getValue(achievementId) == 0xfa2)
		{
			bluespheres.toast.show = ""
			bluespheres.toast.state = 0x00
		}
		else
		{
			// Otherwise, complete the specified achievement
			BlueSpheresTimer.Achievements.setValue(achievementId, 0xfa2)
		}
	}
}

//? Sets 0x00 for all Achievements memory addresses that are greater than 0x00.
function void BlueSpheresTimer.Achievements.reset()
{
	// Reset the toast if it was in the process
	bluespheres.toast.show = ""
	bluespheres.toast.state = 0x00
	bluespheres.toast.frames = 0x00
	bluespheres.toast.timeout = 0x00
	
	// Total number of Achievements
	for (u8 A = 0x00; A <= bluespheres.achievements.total; ++A)
	{
		// If the achievement has been received, or its value is not equal to 0, then set 0
		if (BlueSpheresTimer.Achievements.getValue(A) > 0x00)
		{
			BlueSpheresTimer.Achievements.setValue(A, 0x00)
			//debugLog(stringformat("Reset RAM 0x%06x", BlueSpheresTimer.Achievements.getAddress(A)))
		}
	}
}

//? Returns the number of Achievements memory addresses that are greater than 0x00.
function u8 BlueSpheresTimer.Achievements.writed()
{
	u8 writed_address
	
	// Total number of Achievements
	for (u8 A = 0x00; A <= bluespheres.achievements.total; ++A)
	{
		// Add +1 to variable if value greater than 0x00
		if (BlueSpheresTimer.Achievements.getValue(A) > 0x00)
		{
			writed_address += 0x01
		}
	}
	
	// Return the value
	return writed_address
}

//? Sets a Completed status for the all Achievements ID's.
function void BlueSpheresTimer.Achievements.cheat()
{
	if (Input.buttonDown(BUTTON_B) == 0x00  || global.game_mode == 0x34)
		return
	
	// Total number of Achievements
	for (u8 A = 0x00; A <= bluespheres.achievements.total; ++A)
	{
		BlueSpheresTimer.Achievements.setComplete(A)
	}
}