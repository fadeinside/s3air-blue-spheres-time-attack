//? Simplified BlueSpheresTimer.TextManager.drawText() function with the key and without configurable transparency.
function void BlueSpheresTimer.TextManager.drawText(s32 px, s32 py, u32 renderQueue, u8 align, u64 text, u8 font, u64 key1, u64 key2)
{
	BlueSpheresTimer.TextManager.drawText(px, py, renderQueue, align, text, font, 255, key1, key2)
}

//? The full text rendering code with text alignment and the key.
function void BlueSpheresTimer.TextManager.drawText(s32 px, s32 py, u32 renderQueue, u8 align, u64 text, u8 font, u8 alpha, u64 key1, u64 key2)
{
	s32 character_space
	for (s32 A = 0x00; A < strlen(text); ++A)
	{
		u8 character = getchar(text, A)
		
		if (character >= getChar("a") && character <= getChar("z"))
			character -= 32
		if (character == getChar("^"))
			 character_space = 0x00
		
		u64 key = stringformat("%s.%02d", BlueSpheresTimer.TextManager.getFont(font), character)
		if (Renderer.hasCustomSprite(key))
			character_space += BlueSpheresTimer.TextManager.getSpacing(font, character)
	}
	
	s32 left
	if (align == 0x00)
		left = 0x00
	else if (align == 0x01)
		left = character_space / 0x02
	else if (align == 0x02)
		left = character_space
	
	if (global.game_mode != 0x87)
		BlueSpheresTimer.TextManager.drawKeyboard_dual(px + left + 12, py, renderQueue, key1, key2, 0x00)
	BlueSpheresTimer.TextManager.drawText(px, py, renderQueue, align, text, font, alpha)
}

//? Render two keyboard keys with orientation.
function void BlueSpheresTimer.TextManager.drawKeyboard_dual(s32 px, s32 py, u16 renderQueue, u64 key1, u64 key2, u8 orientation)
{
	// Orientation:
	// - 0x00 - Horizontal
	// - 0x10 - Vertical
	
	if (orientation == 0x00)
	{
		BlueSpheresTimer.TextManager.drawKeyboard(px, py, renderQueue, key1)
		px += (key1 == "start") ? 18 : 0x00
		BlueSpheresTimer.TextManager.drawKeyboard(px + 0x0c, py, renderQueue, key2)
	}
	
	if (orientation == 0x10)
	{
		BlueSpheresTimer.TextManager.drawKeyboard(px, py - 0x06, renderQueue, key1)
		px += (key1 == "start") ? 18 : 0x00
		BlueSpheresTimer.TextManager.drawKeyboard(px, py + 0x06, renderQueue, key2)
	}
}

//? Render of a single key keyboard.
function void BlueSpheresTimer.TextManager.drawKeyboard(s32 px, s32 py, u16 renderQueue, u64 key)
{
	// Ignore rendering if this setting is disabled
	if !(SETTING_BS_SHOW_KEYBOARD_KEYS)
		return
	
	u8 alpha = 0xff
	// Transparent when any key pressed
	if (key == "x")
	{
		if (Input.buttonDown(BUTTON_B))
			alpha = 0x90
	}
	if (key == "y")
	{
		if (Input.buttonDown(BUTTON_Y))
			alpha = 0x90
	}
	if (key == "a")
	{
		if (Input.buttonDown(BUTTON_X))
			alpha = 0x90
	}
	if (key == "b")
	{
		if (Input.buttonDown(BUTTON_A))
			alpha = 0x90
	}
	if (key == "up")
	{
		if (control.pad1.state & CONTROL_UP)
			alpha = 0x90
	}
	if (key == "left")
	{
		if (control.pad1.state & CONTROL_LEFT)
			alpha = 0x90
	}
	if (key == "down")
	{
		if (control.pad1.state & CONTROL_DOWN)
			alpha = 0x90
	}
	if (key == "right")
	{
		if (control.pad1.state & CONTROL_RIGHT)
			alpha = 0x90
	}
	if (key == "start")
	{
		if (control.pad1.state & CONTROL_START)
			alpha = 0x90
	}
	
	// Check if the sprite exit
	if (Renderer.hasCustomSprite(stringformat("icon_key_%s", key)))
		Renderer.drawCustomSprite(stringformat("icon_key_%s", key), px, py, 0x00, 0x40, renderQueue, 0x00, alpha)
}