//? Checks for matches of values/events.
function void BlueSpheresTimer.Emeralds.update()
{
	if (u8[0xffffe44c] == 0x00)
		return // Do not perform any actions if the level was not successful
		
	if (bluespheres.rings_remaining != 0x00)
		return // Do not perform any actions if all the rings are not collected at the stage
	
	// Get an emerald for the currently selected level, if it is not received, and if these are S3 stages
	if (BlueSpheresTimer.Emeralds.getStatus(bluespheres.timeattack.levelselected) == 0x00 && bluespheres.timeattack.layoutselected == 0x00)
	{
		BlueSpheresTimer.Emeralds.setStatus(bluespheres.timeattack.levelselected, 0x01)
	}
	
	// Get a super emerald for the currently selected level if it is inactive, and if these stages S&K
	if (BlueSpheresTimer.Emeralds.getStatus(bluespheres.timeattack.levelselected) == 0x02 && bluespheres.timeattack.layoutselected == 0x01)
	{
		BlueSpheresTimer.Emeralds.setStatus(bluespheres.timeattack.levelselected, 0x03)
	}
}

function u64 BlueSpheresTimer.Emeralds.getEmerald(u8 emeraldId)
{
	u64 emeraldColor
	if (BlueSpheresTimer.Emeralds.getStatus(emeraldId) == 0x00 || BlueSpheresTimer.Emeralds.getStatus(emeraldId) == 0x02)
		emeraldColor = "emply"
	else if (emeraldId == 0x00)
		emeraldColor = "green"
	else if (emeraldId == 0x01)
	{
		// Yellow Emerald by Guthi, https://gamebanana.com/mods/54326
		if (Mods.isModActive("Yellow Emerald"))
			emeraldColor = "yellow"
		else
			emeraldColor = "orange"
	}
	else if (emeraldId == 0x02)
		emeraldColor = "pink"
	else if (emeraldId == 0x03)
		emeraldColor = "blue"
	else if (emeraldId == 0x04)
		emeraldColor = "gray"
	else if (emeraldId == 0x05)
		emeraldColor = "red"
	else if (emeraldId == 0x06)
		emeraldColor = "cyan"
	else if (emeraldId == 0x07)
	{
		if (Mods.isModActive("Yellow Emerald"))
			emeraldColor = "orange"
		else
			emeraldColor = "yellow"
	}
	
	u64 emeraldView
	if (BlueSpheresTimer.Emeralds.getStatus(emeraldId) == 0x00 || BlueSpheresTimer.Emeralds.getStatus(emeraldId) == 0x01)
		emeraldView = "chaos"
	else if (BlueSpheresTimer.Emeralds.getStatus(emeraldId) == 0x02 || BlueSpheresTimer.Emeralds.getStatus(emeraldId) == 0x03)
		emeraldView = "super"
	
	u64 key = stringformat("icon_emerald_%s_%s", emeraldView, emeraldColor)
	return key
}

//? Returns the address of the specified Emerald ID.
function u32 BlueSpheresTimer.Emeralds.getAddress(u8 emeraldId)
{
	u32 emeraldID = 0x16 * (emeraldId + 0x01)
	u32 mods = Mods.isModActive("Sonic 3: D.A. Garden Edition") ? 0x100 : 0x00
	
	return bluespheres.emeraldsDataAddress + emeraldID + mods
}

//? Установить новое значение для всех адресов Изумрудов.
function void BlueSpheresTimer.Emeralds.replaceAll(u8 status)
{
	for (u8 i = 0x00; i <= 0x07; i++)
	{
		BlueSpheresTimer.Emeralds.setStatus(i, status)
	}
}

//? Проверяет значение адресов изумрудов, и если они равны указаному, вернуть true.
function bool BlueSpheresTimer.Emeralds.allEqual(u8 status)
{
	bool equal = false
	
	if (BlueSpheresTimer.Data.getValue(bluespheres.stage8Unlocked) == 0x01)
	{
		if (BlueSpheresTimer.Emeralds.getStatus(0x00) == status && BlueSpheresTimer.Emeralds.getStatus(0x01) == status && BlueSpheresTimer.Emeralds.getStatus(0x02) == status && BlueSpheresTimer.Emeralds.getStatus(0x03) == status && BlueSpheresTimer.Emeralds.getStatus(0x04) == status && BlueSpheresTimer.Emeralds.getStatus(0x05) == status && BlueSpheresTimer.Emeralds.getStatus(0x06) == status && BlueSpheresTimer.Emeralds.getStatus(0x07) == status)
			equal = true
	}
	else
	{
		if (BlueSpheresTimer.Emeralds.getStatus(0x00) == status && BlueSpheresTimer.Emeralds.getStatus(0x01) == status && BlueSpheresTimer.Emeralds.getStatus(0x02) == status && BlueSpheresTimer.Emeralds.getStatus(0x03) == status && BlueSpheresTimer.Emeralds.getStatus(0x04) == status && BlueSpheresTimer.Emeralds.getStatus(0x05) == status && BlueSpheresTimer.Emeralds.getStatus(0x06) == status)
			equal = true
	}
	
	return equal
}

//? Returns the value of the specified Emerald ID.
function u8 BlueSpheresTimer.Emeralds.getStatus(u8 emeraldId)
{
	// Returns:
	// - 0x00 - Not collected
	// - 0x01 - Chaos Emerald collected
	// - 0x02 - Inactive Super Emerald
	// - 0x03 - Super Emerald collected
	
	u32 emeraldOffset = BlueSpheresTimer.Emeralds.getAddress(emeraldId)
	System.loadPersistentData(emeraldOffset, stringformat("SRAM_BlueSpheresTimer_Emerald_0x%06x", emeraldOffset), bluespheres.emeraldsDataSize)
	
	return u8[emeraldOffset]
}

//? Sets a new value for the specified Emerald ID.
function void BlueSpheresTimer.Emeralds.setStatus(u8 emeraldId, u8 status)
{
	u32 emeraldOffset = BlueSpheresTimer.Emeralds.getAddress(emeraldId)
	u8[emeraldOffset] = status
	
	System.savePersistentData(emeraldOffset, stringformat("SRAM_BlueSpheresTimer_Emerald_0x%06x", emeraldOffset), bluespheres.emeraldsDataSize)
}