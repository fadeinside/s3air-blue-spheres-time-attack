function void BlueSpheresTimer.BackgroundManager.update()
{
	// SK logo and Copyright
	BlueSpheresTimer.BackgroundManager.overlay()
	
	if (SETTING_BS_MENU_BACKGROUND == 0x02)
	{
		UpdateGameObjects()
		
		// Finish the function on this
		return
	}
	
	// Let's make the background move from the bottom up if "Sonic and Knuckles" theme is enabled
	if (SETTING_BS_MENU_BACKGROUND == 0x01)
	{
		if (SETTING_BS_MENU_OPTIMIZATION)
			return
		
		D0 = (s16[0xffffe402] < 0x00) ? -0x400 : 0x400
		D0 += u32[0xffffeed8]
		
		if (D0.s32 < -0x8000)
			D0 = -0x8000
		else if (D0.s32 > 0x8000)
			D0 = 0x8000
		
		u32[0xffffeed8] = D0
		camera.background.y += D0
		camera.background.y.u16 &= 0xff
		
		fn059990()
		
		// Finish the function on this
		return
	}
	
	// Render stage preview
	BlueSpheresTimer.BackgroundManager.stagePreview()
}

function void BlueSpheresTimer.BackgroundManager.overlay()
{
	// Copyright
	Renderer.drawCustomSprite("icon_copyright", getScreenWidth() - 104, 210, 0x00, 0x40, 0xf00a)
	Renderer.drawCustomSprite("title_screen_cr", getScreenWidth() - 92, 206, 0x40, 0x00, 0xf00a)
	
	// SK Blue Sphere logo
	if (SETTING_BS_MENU_BACKGROUND != 0x01) // Do not render this if the "Sonic and Knuckles" theme is enabled
		Renderer.drawCustomSprite("sklogo", getScreenWidth() / 0x02, 40, 0x40, 0x00, 0xf000)
	
	// Draw a gradient so that the objects are more clearly visible on the background
	u8 alpha = (SETTING_BS_MENU_BACKGROUND == 0x02) ? 0x55 : ((SETTING_BS_MENU_BACKGROUND == 0x01) ? 0xba : 0xff)
	for (u8 A = 0x00; A <= 0x01 + (getScreenWidth() / 0x10); ++A)
		Renderer.drawCustomSprite("background_menu", 0x10 * A, 0x00, 0x00, 0x40, 0xf000, 0x00, alpha)
}

function void BlueSpheresTimer.BackgroundManager.stagePreview()
{
	// Load ground colors
	A1 = u32[0x0088ba + bluespheres.timeattack.levelselected * 0x10]
	if (bluespheres.timeattack.layoutselected)
		A1 += 0x0130
	
	if (Mods.isModActive("Sonic 3: D.A. Garden Edition"))
		A1 += 0x2cb80e
	
	u32[0xffffe446] = A1
	A2 = 0xfffffc80
	
	copyMemory(A2 + 0x70, A1, 0x10)
	
	// We will make the ground static, as in the first release, when the menu optimization setting is active
	if (SETTING_BS_MENU_OPTIMIZATION == 0x02)
	{
		bluespheres.position.x = 1024
		bluespheres.position.y = 1024
		bluespheres.direction = 96
	
		// Render ground
		BlueSpheres.renderCustomGround()
		
		// Finish the function on this
		return
	}
	
	// Some things to make the ground animate
	u8[0xffffe433] = 0x00
	bluespheres.lifted_height = 0x00
	bluespheres.movement_speed = 0x500
	
	D2.s16 = bluespheres.movement_speed
	D0.u8 = bluespheres.direction
	
	LookupSinCos()
	D0.s32 = s32(D0.s16) * D2.s16
	D1.s32 = s32(D1.s16) * D2.s16
	bluespheres.position.x -= D0 >> 0x10
	bluespheres.position.y -= D1 >> 0x10
	
	// Render ground
	BlueSpheres.renderCustomGround()
	
	// Ignore the spheres render if this setting is disabled
	if !(SETTING_BS_STAGE_PREVIEW_ENABLE)
	{
		bluespheres.direction = 0x40
		
		// Finish the function on this
		return
	}
	
	// Render spheres
	BlueSpheresTimer.BackgroundManager.stagePreview_Spheres()
}

function void BlueSpheresTimer.BackgroundManager.stagePreview_Spheres()
{
	// Main game stages
	Kosinski.decompress(u32[0x1e4078], 0xffff0000)
	// "Sonic 3: D.A. Garden Edition" by Thorn_SRetro, check https://gamebanana.com/mods/151029
	if (Mods.isModActive("Sonic 3: D.A. Garden Edition") && bluespheres.timeattack.characterselected == 0x02) // Knuckles has a different level layout in DAGE
		Kosinski.decompress(0x2d3ad0, 0xffff0000)
	
	// Load level layout, either from S3 or S&K
	A2 = bluespheres.timeattack.layoutselected ? 0x008590 : 0x25e2d8
	A2 = u32[A2 + bluespheres.timeattack.levelselected * 0x04]
	if !(bluespheres.timeattack.layoutselected)
	{
		A2 += 0x200000
		if (Mods.isModActive("Sonic 3: D.A. Garden Edition") && bluespheres.timeattack.characterselected == 0x02) // Knuckles has a different level layout in DAGE
			A2 += 0x0679b0
	}
	
	zeroMemory(0xfffff000, 0x100)
	copyMemory(0xfffff100, A2, 0x400)
	zeroMemory(0xfffff500, 0x100)
	A2 += 0x400
	
	// Bools
	bool stageChanged = control.pad1.pressed & (CONTROL_UP | CONTROL_DOWN)
	bool layoutChanged = Input.buttonPressed(BUTTON_X) && BlueSpheresTimer.Data.getValue(bluespheres.skUnlocked)
	bool characterChanged = Input.buttonPressed(BUTTON_Y) && (bluespheres.timeattack.characterselected != 0x02 && Mods.isModActive("Sonic 3: D.A. Garden Edition")) && bluespheres.timeattack.knuxSelected
	bool characterChangedKnux = Input.buttonPressed(BUTTON_Y) && (bluespheres.timeattack.characterselected == 0x02 && Mods.isModActive("Sonic 3: D.A. Garden Edition")) // Knuckles has a different level layout in DAGE
	
	// Sets the camera in the right place
	if (global.game_mode == 0x85 && !bluespheres.popup.show && (stageChanged || layoutChanged || characterChanged || characterChangedKnux))
	{
		if (characterChangedKnux)
			bluespheres.timeattack.knuxSelected = 0x01
		if (characterChanged)
			bluespheres.timeattack.knuxSelected = 0x00
		
		u16[0xffffe426] = u16[A2]
		bluespheres.position.x = u16[A2 + 0x02]
		bluespheres.position.y = u16[A2 + 0x04]
	}
	
	// Fixes camera direction when you return to the menu after red sphere or emerald
	if (bluespheres.direction != 0x00 || bluespheres.direction != 64 || bluespheres.direction != 128 || bluespheres.direction != 192)
		u16[0xffffe426] = u16[A2]
	
	// Sets the correct camera position when you first log in to the Lobby
	if (global.game_mode == 0x89 && bluespheres.position.x == 0x00)
	{
		bluespheres.position.x = u16[A2 + 0x02]
		bluespheres.position.y = u16[A2 + 0x04]
	}
	
	// Rings framerate
	fn009d9e()
	
	// Render spheres
	BlueSpheres.RenderSpheres()
}