function void BlueSpheresTimer.Menu.timeattack.headline()
{
	if (bluespheres.popup.show && SETTING_BS_MENU_OPTIMIZATION)
		return
	
	if (SETTING_BS_MENU_OPTIMIZATION == 0x02)
	{
		BlueSpheresTimer.TextManager.drawText(getScreenWidth() / 0x02, 25, 0xf000, 0x01, STRING_TIME_ATTACK_HEADLINE, 0x00)
		return
	}
	
	s32 offset = 216
	s32 px = getScreenWidth() / 0x02 - offset
	
	for (u8 A = 0x00; A < 0x04; ++A)
		BlueSpheresTimer.TextManager.drawText(px + (offset * A) - ((level.framecounter * 0x02) % offset), 25, 0xf000, 0x01, STRING_TIME_ATTACK_HEADLINE, 0x00)
}

function void BlueSpheresTimer.Menu.timeattack.items()
{
	if (bluespheres.popup.show && SETTING_BS_MENU_OPTIMIZATION)
		return
	
	s32 px = getScreenWidth() / 0x02
	s32 py = 46
	
	BlueSpheresTimer.Menu.timeattack.items.keys(px, py)
	BlueSpheresTimer.Menu.timeattack.items.menu(px, py)
	
	BlueSpheresTimer.Menu.timeattack.items.total(px, py)
	BlueSpheresTimer.Menu.timeattack.items.recordslist(px, py)
	
	BlueSpheresTimer.Menu.timeattack.items.playerselect(px, py)
	BlueSpheresTimer.Menu.timeattack.items.emeralds(px, py)
	
	BlueSpheresTimer.Menu.timeattack.items.levelselect(px, py)
	BlueSpheresTimer.Menu.timeattack.items.levelslayout(px, py)
}

function void BlueSpheresTimer.Menu.timeattack.items.keys(s32 px, s32 py)
{
	// Ignore if popup menu active
	if (bluespheres.popup.show)
		return
	
	// Set position
	px = 18
	py = getScreenHeight() - 18
	
	BlueSpheresTimer.TextManager.drawKeyboard(px, py, 0xf000, "b")
	px += 13
	BlueSpheresTimer.TextManager.drawKeyboard(px, py, 0xf000, "start")
	px += 18 // Additional offset by "start"
	px += 13
	BlueSpheresTimer.TextManager.drawKeyboard_dual(px, py, 0xf000, "left", "right", 0x00)
}

function void BlueSpheresTimer.Menu.timeattack.items.menu(s32 px, s32 py)
{
	px -= 128
	BlueSpheresTimer.TextManager.drawTextMenuItem(px, getScreenHeight() - py, 0xf000, 0x01, STRING_TIME_ATTACK_OPTIONS, 0x01, bluespheres.timeattack.buttonselected, 0x00)
	
	px += 128
	BlueSpheresTimer.TextManager.drawTextMenuItem(px, getScreenHeight() - py, 0xf000, 0x01, STRING_TIME_ATTACK_START, 0x01, bluespheres.timeattack.buttonselected, 0x01)
	
	px += 128
	BlueSpheresTimer.TextManager.drawTextMenuItem(px, getScreenHeight() - py, 0xf000, 0x01, STRING_TIME_ATTACK_ACHIEVEMENTS, 0x01, bluespheres.timeattack.buttonselected, 0x02)
}

function void BlueSpheresTimer.Menu.timeattack.items.total(s32 px, s32 py)
{
	BlueSpheresTimer.TextManager.drawText(px, py, 0xf000, 0x01, STRING_TIME_ATTACK_TOTAL, 0x01)
	
	s32 minutes_total
	s32 seconds_total
	s32 centiseconds_total
	
	u8 gangMain = (bluespheres.timeattack.characterselected + 0x01)
	u8 gangExtra = bluespheres.timeattack.characterselected == 0x03 ? (bluespheres.timeattack.xtracharselected - 0x01) : 0x00
	
	// Number of stages (0x00 .. 0x06, 0x07)
	u8 maxStages = BlueSpheresTimer.Data.getValue(bluespheres.stage8Unlocked) ? 0x07 : 0x06
	for (u8 A = 0x00; A <= maxStages; ++A)
	{
		// Number of record places (0x01 .. 0x04)
		for (u8 B = 0x01; B <= 0x04; ++B)
		{
			u32 recordplace = 0x1024 * B
			u32 character = 0x128 * (gangMain + gangExtra)
			u32 stage = 0x16 * (A + 0x01)
			u32 layout = 0x08 * bluespheres.timeattack.layoutselected
			u32 mods = Mods.isModActive("Sonic 3: D.A. Garden Edition") ? 0x10000 : 0x00
			
			u32 recordOffset = bluespheres.recordDataAddress + recordplace + character + stage + layout + mods
			System.loadPersistentData(recordOffset, stringformat("SRAM_BlueSpheresTimer_Record_0x%06x", recordOffset), 0x04)
			
			// Get parsed data from address value
			s32 minutes = s32[recordOffset] / 10000
			s32 seconds = (s32[recordOffset] - (minutes * 10000)) / 100
			s32 centiseconds = (s32[recordOffset] - (minutes * 10000)) - (seconds * 100)
			
			//debugLog(stringformat("Loaded RAM 0x%06x: %s", recordOffset, BlueSpheresTimer.getFormatTime(minutes, seconds, centiseconds)))
			
			// If the address value is greater than 0x00, then add its parsed values to the variables. Otherwise add a static value to a variable
			if (s32[recordOffset] > 0x00)
			{
				minutes_total += minutes
				seconds_total += seconds
				centiseconds_total += centiseconds
			}
			else
			{
				minutes_total += 10
			}
		}
	}
	
	seconds_total += centiseconds_total / 60
	minutes_total += seconds_total / 60
	centiseconds_total %= 99
	seconds_total %= 60
	
	py += 16
	BlueSpheresTimer.TextManager.drawText(px, py, 0xf000, 0x01, stringformat("* %s *", BlueSpheresTimer.getFormatTime(minutes_total, seconds_total, centiseconds_total)), 0x02)
}

function void BlueSpheresTimer.Menu.timeattack.items.recordslist(s32 px, s32 py)
{
	py += 44
	BlueSpheresTimer.TextManager.drawText(px, py, 0xf000, 0x01, STRING_TIME_ATTACK_RECORDS, 0x01)
	
	for (u8 A = 0x01; A <= 0x04; ++A)
	{
		py += 16
		string name = (A == 0x01) ? "st" : ((A == 0x02) ? "nd" : ((A == 0x03) ? "rd" : ((A == 0x04) ? "th" : "")))
		BlueSpheresTimer.Menu.timeattack.items.table(px, py, 0xf000, 0x02, stringformat("%d", A), BlueSpheresTimer.Records.getRecordTime(A))
	}
}

function void BlueSpheresTimer.Menu.timeattack.items.playerselect(s32 px, s32 py)
{
	px -= 128
	BlueSpheresTimer.TextManager.drawTextWithKeys(px, py, 0xf000, 0x01, STRING_TIME_ATTACK_CHARACTER, 0x01, "y", "")
	BlueSpheresTimer.TextManager.drawText(px, py + 16, 0xf000, 0x01, "*    *", 0x02)
	
	string key
	if (bluespheres.timeattack.characterselected == CHARACTER_SONIC)
		key = "continue_icon_sonic"
	else if (bluespheres.timeattack.characterselected == CHARACTER_TAILS)
		key = "continue_icon_tails"
	else if (bluespheres.timeattack.characterselected == CHARACTER_KNUCKLES)
		key = "continue_icon_knuckles"
	else if (bluespheres.timeattack.characterselected == 0x03)
		key = stringformat("continue_icon_slot%d", bluespheres.timeattack.xtracharselected)
	
	if (Renderer.hasCustomSprite(key))
	{
		Renderer.drawCustomSprite(key, px, py + 28, 0x40, 0x00, 0xf000)
	}
}

function void BlueSpheresTimer.Menu.timeattack.items.emeralds(s32 px, s32 py)
{
	px -= 128
	py += 44
	BlueSpheresTimer.TextManager.drawText(px, py, 0xf000, 0x01, STRING_TIME_ATTACK_EMERALDS, 0x01)
	
	u8 width = BlueSpheresTimer.Data.getValue(bluespheres.skUnlocked) ? 16 : 14
	
	px -= BlueSpheresTimer.Data.getValue(bluespheres.skUnlocked) ? 26 : 22
	py += 16
	for (u8 A = 0x00; A < (BlueSpheresTimer.Data.getValue(bluespheres.stage8Unlocked) ? 0x08 : 0x07); ++A)
	{
		// Render emerald sprite
		Renderer.drawCustomSprite(BlueSpheresTimer.Emeralds.getEmerald(A), px, py, 0x00, 0x40, 0xf000)
		//debugLog(stringformat("Loaded RAM 0x%06x: 0x%02x", BlueSpheresTimer.Emeralds.getAddress(A), BlueSpheresTimer.Emeralds.getStatus(A)))
		
		// Offset for the next emerald
		px += width
		
		// Offset for the next row
		if (A == 0x03)
		{
			px -= BlueSpheresTimer.Data.getValue(bluespheres.stage8Unlocked) ? 16 : 0x07
			px -= width * 0x03
			py += 15
		}
	}
}

function void BlueSpheresTimer.Menu.timeattack.items.levelselect(s32 px, s32 py)
{
	px += 128
	BlueSpheresTimer.TextManager.drawTextWithKeys(px, py, 0xf000, 0x01, STRING_TIME_ATTACK_LEVEL, 0x01, "up", "down")
	
	py += 16
	if (bluespheres.timeattack.levelselected == 0x07)
		BlueSpheresTimer.TextManager.drawText(px, py, 0xf000, 0x01, stringformat("* %s *", STRING_TIME_ATTACK_SECRET), 0x01)
	else
		BlueSpheresTimer.TextManager.drawText(px, py, 0xf000, 0x01, stringformat("* 0%d *", bluespheres.timeattack.levelselected + 0x01), 0x02)
}

function void BlueSpheresTimer.Menu.timeattack.items.levelslayout(s32 px, s32 py)
{
	px += 128
	u8 alpha = BlueSpheresTimer.Data.getValue(bluespheres.skUnlocked) ? 0xff : 0x90
	
	py +=  44
	BlueSpheresTimer.TextManager.drawTextWithKeys(px, py, 0xf000, 0x01, STRING_TIME_ATTACK_LAYOUT, 0x01, alpha, "a", "")
	
	py += 16
	BlueSpheresTimer.TextManager.drawText(px, py, 0xf000, 0x01, stringformat("* %s *", bluespheres.timeattack.layoutselected ? STRING_TIME_ATTACK_LAYOUT_SK : STRING_TIME_ATTACK_LAYOUT_S3), 0x01, alpha)
}

function void BlueSpheresTimer.Menu.timeattack.items.table(s32 px, s32 py, u16 renderQueue, u8 align, string text, s32 input_data)
{
	px -= 14
	BlueSpheresTimer.TextManager.drawText(px - 32, py, renderQueue, align, text, 0x01)
	Renderer.drawCustomSprite("icon_clock", px - 22, py, 0x40, 0x00, renderQueue)
	
	if (input_data == 0x00)
	{
		BlueSpheresTimer.TextManager.drawText(px, py, renderQueue, align, "--'--`--", 0x02)
		return
	}
	
	BlueSpheresTimer.TextManager.drawText(px, py, renderQueue, align, BlueSpheresTimer.getFormatTime(input_data), 0x02)
}

function void BlueSpheresTimer.Menu.timeattack.updateControl()
{
	// Ignore if popup menu active
	if (bluespheres.popup.show)
		return
	
	// Button selection
	if (control.pad1.pressed & (CONTROL_LEFT | CONTROL_RIGHT))
	{
		playSound(0x5b)
		if (control.pad1.pressed & CONTROL_LEFT)
		{
			if (bluespheres.timeattack.buttonselected != 0x00)
				--bluespheres.timeattack.buttonselected
			else
				bluespheres.timeattack.buttonselected = bluespheres.buttons.setup
		}
		else if (control.pad1.pressed & CONTROL_RIGHT)
		{
			if (bluespheres.timeattack.buttonselected < bluespheres.buttons.setup)
				++bluespheres.timeattack.buttonselected
			else
				bluespheres.timeattack.buttonselected = 0x00
		}
	}
	
	// Switch stages
	u8 maxStages = BlueSpheresTimer.Data.getValue(bluespheres.stage8Unlocked) ? 0x07 : 0x06
	if (control.pad1.pressed & (CONTROL_UP | CONTROL_DOWN))
	{
		playSound(0x5b)
		if (control.pad1.pressed & CONTROL_UP)
		{
			if (bluespheres.timeattack.levelselected < maxStages)
				++bluespheres.timeattack.levelselected
			else
				bluespheres.timeattack.levelselected = 0x00
		}
		if (control.pad1.pressed & CONTROL_DOWN)
		{
			if (bluespheres.timeattack.levelselected != 0x00)
				--bluespheres.timeattack.levelselected
			else
				bluespheres.timeattack.levelselected = maxStages
		}
	}
	
	// Change the character
	u8 maxCharacters = BlueSpheresTimer.maxCharacters()
	if (Input.buttonPressed(BUTTON_Y))
	{
		playSound(0x5b)
		if (bluespheres.timeattack.characterselected < 0x03)
		{
			++bluespheres.timeattack.characterselected
			if (bluespheres.timeattack.characterselected > maxCharacters)
				bluespheres.timeattack.characterselected = 0x00
			
			// Set the available ID for the extra character as the first value
			if (bluespheres.timeattack.characterselected == 0x03)
			{
				if (Renderer.hasCustomSprite("dataSel_slot1"))
					bluespheres.timeattack.xtracharselected = 0x01
				else if (Renderer.hasCustomSprite("dataSel_slot2"))
					bluespheres.timeattack.xtracharselected = 0x02
				else if (Renderer.hasCustomSprite("dataSel_slot3"))
					bluespheres.timeattack.xtracharselected = 0x03
				else
				{
					bluespheres.timeattack.characterselected = 0x00
					bluespheres.timeattack.xtracharselected = 0x00
				}
			}
		}
		else
		{
			// Check the availability of extra characters, if available, then set it, otherwise reset and go to Sonic
			if (bluespheres.timeattack.xtracharselected == 0x01)
			{
				if (Renderer.hasCustomSprite("dataSel_slot2"))
					bluespheres.timeattack.xtracharselected = 0x02
				else if (Renderer.hasCustomSprite("dataSel_slot3"))
					bluespheres.timeattack.xtracharselected = 0x03
				else
				{
					bluespheres.timeattack.characterselected = 0x00
					bluespheres.timeattack.xtracharselected = 0x00
				}
			}
			else if (bluespheres.timeattack.xtracharselected == 0x02)
			{
				if (Renderer.hasCustomSprite("dataSel_slot3"))
					bluespheres.timeattack.xtracharselected = 0x03
				else
				{
					bluespheres.timeattack.characterselected = 0x00
					bluespheres.timeattack.xtracharselected = 0x00
				}
			}
			else
			{
				bluespheres.timeattack.characterselected = 0x00
				bluespheres.timeattack.xtracharselected = 0x00
			}
		}
	}
	
	// Change the levels layout from S3 to SK
	if (Input.buttonPressed(BUTTON_X))
	{
		if (BlueSpheresTimer.Data.getValue(bluespheres.skUnlocked))
		{
			playSound(0x5b)
			++bluespheres.timeattack.layoutselected
			if (bluespheres.timeattack.layoutselected > 0x01)
				bluespheres.timeattack.layoutselected = 0x00
		}
		else
		{
			playSound(0x7b)
			
			// Setup tooltip
			BlueSpheresTimer.TooltipManager.setupTooltip(0x00, "gray", "icon_tooltip_warning", STRING_TOOLTIP_SK_LEVELS, STRING_TOOLTIP_READ_FAQ)
		}
	}
	
	// Perform the action of selected button when start pressed
	if (control.pad1.pressed & CONTROL_START)
	{
		if (bluespheres.timeattack.buttonselected == 0x00)
		{
			playSound(0x63)
			bluespheres.timeattack.active = 0x00
			global.game_mode = 0x86
		}
		if (bluespheres.timeattack.buttonselected == 0x01)
		{
			playSound(0xaf)
			bluespheres.timeattack.active = 0x01
			BlueSpheresTimer.EntryFunctions.startSpecialStage()
		}
		if (bluespheres.timeattack.buttonselected == 0x02)
		{
			playSound(0x63)
			bluespheres.timeattack.active = 0x00
			global.game_mode = 0x88
		}
	}
	
	// Go back to the main menu
	if (control.pad1.pressed & CONTROL_B)
	{
		playSound(0xad)
		bluespheres.timeattack.active = 0x00
		global.game_mode = 0x89
	}
}

function void BlueSpheresTimer.Menu.timeattack.popups()
{
	if (bluespheres.popup.show == 0x00)
		return
	
	if (BlueSpheresTimer.Emeralds.allEqual(0x01) && !BlueSpheresTimer.Data.getValue(bluespheres.stage8Unlocked))
	{
		BlueSpheresTimer.Menu.popup.show(STRING_UNLOCK_NOW_UNLOCKED, STRING_UNLOCK_SECRET_STAGE, "", "", STRING_OKAY)
		if (control.pad1.pressed & CONTROL_START)
		{
			playSound(0x63)
			BlueSpheresTimer.Data.setValue(bluespheres.stage8Unlocked, 0x01)
			
			bluespheres.popup.show = 0x00
		}
	}
	
	if (BlueSpheresTimer.Emeralds.allEqual(0x01) && BlueSpheresTimer.Data.getValue(bluespheres.stage8Unlocked) && !BlueSpheresTimer.Data.getValue(bluespheres.skUnlocked))
	{
		BlueSpheresTimer.Menu.popup.show(STRING_UNLOCK_NOW_UNLOCKED, STRING_UNLOCK_SK_STAGES, "", "", STRING_OKAY)
		if (control.pad1.pressed & CONTROL_START)
		{
			playSound(0x63)
			BlueSpheresTimer.Data.setValue(bluespheres.skUnlocked, 0x01)
			BlueSpheresTimer.Emeralds.replaceAll(0x02)
			
			bluespheres.popup.show = 0x00
		}
	}
}