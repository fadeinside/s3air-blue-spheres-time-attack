function void BlueSpheresTimer.Menu.pause.background()
{
	for (u8 A = 0x00; A <= 0x01 + (getScreenWidth() / 0x10); ++A)
		Renderer.drawCustomSprite("background_menu", 0x10 * A, 0x00, 0x00, 0x40, 0xf000, 0x00, 0xaa)
}

function void BlueSpheresTimer.Menu.pause.headline()
{
	if (SETTING_BS_MENU_OPTIMIZATION == 0x02)
	{
		BlueSpheresTimer.TextManager.drawText(getScreenWidth() / 0x02, 25, 0xf000, 0x01, STRING_PAUSE_HEADLINE, 0x00)
		return
	}
	
	s32 offset = 220
	s32 px = getScreenWidth() / 0x02 - offset
	
	for (u8 A = 0x00; A < 0x04; ++A)
		BlueSpheresTimer.TextManager.drawText(px + (offset * A) - ((level.framecounter * 0x02) % offset), 25, 0xf000, 0x01, STRING_PAUSE_HEADLINE, 0x00)
}

function void BlueSpheresTimer.Menu.pause.items()
{
	s32 px = getScreenWidth() / 0x02
	s32 py = getScreenHeight() / 0x02
	
	BlueSpheresTimer.Menu.pause.items.keys(px, py)
	BlueSpheresTimer.Menu.pause.items.menu(px, py)
}

function void BlueSpheresTimer.Menu.pause.items.keys(s32 px, s32 py)
{
	// Ignore if popup menu active
	if (bluespheres.popup.show)
		return
	
	// Set position
	px = 18
	py = getScreenHeight() - 18
	
	BlueSpheresTimer.TextManager.drawKeyboard(px, py, 0xf000, "y")
	px += 13
	BlueSpheresTimer.TextManager.drawKeyboard(px, py, 0xf000, "start")
	px += 18 // Additional offset by "start"
	px += 13
	BlueSpheresTimer.TextManager.drawKeyboard_dual(px, py, 0xf000, "up", "down", 0x00)
}

function void BlueSpheresTimer.Menu.pause.items.menu(s32 px, s32 py)
{
	py -= 18
	string button_continue = BlueSpheresTimer.TextManager.getMenuItem(bluespheres.pause.buttonselected, 0x00, STRING_PAUSE_CONTINUE)
	BlueSpheresTimer.TextManager.drawText(px, py, 0xf000, 0x01, button_continue, 0x01)
	
	py += 18
	string button_restart = BlueSpheresTimer.TextManager.getMenuItem(bluespheres.pause.buttonselected, 0x01, STRING_PAUSE_RESTART)
	BlueSpheresTimer.TextManager.drawText(px, py, 0xf000, 0x01, button_restart, 0x01)
	
	py += 18
	string button_exit = BlueSpheresTimer.TextManager.getMenuItem(bluespheres.pause.buttonselected, 0x02, STRING_PAUSE_EXIT)
	BlueSpheresTimer.TextManager.drawText(px, py, 0xf000, 0x01, button_exit, 0x01)
}

function void BlueSpheresTimer.Menu.pause.updateControl()
{
	// Ignore if popup menu active
	if (bluespheres.popup.show)
		return
	
	// Button selection
	if (control.pad1.pressed & (CONTROL_UP | CONTROL_DOWN))
	{
		playSound(0x5b)
		if (control.pad1.pressed & CONTROL_UP)
		{
			if (bluespheres.pause.buttonselected != 0x00)
				--bluespheres.pause.buttonselected
			else
				bluespheres.pause.buttonselected = bluespheres.buttons.setup
		}
		else if (control.pad1.pressed & CONTROL_DOWN)
		{
			if (bluespheres.pause.buttonselected < bluespheres.buttons.setup)
				++bluespheres.pause.buttonselected
			else
				bluespheres.pause.buttonselected = 0x00
		}
	}
	
	// Clear the menu items for your cute screenshots
	if (Input.buttonPressed(BUTTON_Y))
	{
		if !(bluespheres.pause.hideMenu)
			++bluespheres.pause.hideMenu
		
		// Press on PC [Y] again to hide/show menu items
		if (PlatformFlags.DESKTOP)
		{
			if (bluespheres.pause.hideMenu > 0x01)
				bluespheres.pause.hideMenu = 0x00
		}
	}
	
	// Perform the action of selected button when start pressed
	if (control.pad1.pressed & CONTROL_START)
	{
		if (bluespheres.pause.hideMenu)
		{
			bluespheres.pause.hideMenu = 0x00
		}
		else if (bluespheres.pause.buttonselected == 0x00)
		{
			if (u8[0xffffe44c] > 0x00)
			{
			#if STANDALONE
				Game.startSkippableCutscene()
			#endif
			}
			
			playSound(0x63)
			global.game.paused = 0x00
		}
		else if (bluespheres.pause.buttonselected == 0x01)
		{
			playSound(0xaf)
			global.game.paused = 0x00
			playMusic(MUSIC_CTRL_STOP)
			
			BlueSpheresTimer.EntryFunctions.startSpecialStage()
		}
		else if (bluespheres.pause.buttonselected == 0x02)
		{
			playSound(0x63)
			global.game.paused = 0x00
			playMusic(MUSIC_CTRL_STOP)
			
			// Disable rendering of plane B prio
			Renderer.enableDefaultPlane(0x03, false)
			
			bluespheres.timeattack.active = 0x00
			BlueSpheresTimer.EntryFunctions.Menu.timeattack()
		}
	}
}

function void BlueSpheresTimer.Menu.pause.renderStageObjects()
{
	BlueSpheres.renderCustomSpheres()
	BlueSpheres.renderCustomCharacterShadows()
	BlueSpheres.renderCustomGround()
	
	A0 = 0xffffb000
	
	D7 = 0x04
	updateGameObjectLoopRenderOnly()
}