function void BlueSpheresTimer.Menu.pause.background()
{
	for (u8 A = 0x00; A <= 0x01 + (getScreenWidth() / 0x10); ++A)
		Renderer.drawCustomSprite("background_menu", 0x10 * A, 0x00, 0x00, 0x40, 0xf000, 0x00, 0xaa)
}

function void BlueSpheresTimer.Menu.pause.headline()
{
	s32 offset = 220
	s32 px = getScreenWidth() / 0x02 - offset
	
	for (u8 A = 0x00; A < 0x04; ++A)
		BlueSpheresTimer.TextManager.drawText(px + (offset * A) - ((level.framecounter * 0x02) % offset), 25, 0xf000, 0x01, STRING_PAUSE_HEADLINE, 0x00)
}

function void BlueSpheresTimer.Menu.pause.items()
{
	s32 px = getScreenWidth() / 0x02
	s32 py = getScreenHeight() / 0x02
	
	BlueSpheresTimer.Menu.pause.items.keys(px, py)
	BlueSpheresTimer.Menu.pause.items.menu(px, py)
}

function void BlueSpheresTimer.Menu.pause.items.keys(s32 px, s32 py)
{
	// Ignore if popup menu active
	if (bluespheres.popup.show)
		return
	
	// Set position
	px = 18
	py = getScreenHeight() - 18
	
	BlueSpheresTimer.TextManager.drawKeyboard(px, py, 0xf000, "y")
	px += 13
	BlueSpheresTimer.TextManager.drawKeyboard(px, py, 0xf000, "start")
	px += 18 // Additional offset by "start"
	px += 13
	BlueSpheresTimer.TextManager.drawKeyboard_dual(px, py, 0xf000, "up", "down", 0x00)
}

function void BlueSpheresTimer.Menu.pause.items.menu(s32 px, s32 py)
{
	py -= 18
	string button_0x00 = BlueSpheresTimer.TextManager.getMenuItem(bluespheres.pause.buttonselected, 0x00, STRING_PAUSE_CONTINUE)
	BlueSpheresTimer.TextManager.drawText(px, py, 0xf000, 0x01, button_0x00, 0x01)
	
	py += 18
	string button_0x01 = BlueSpheresTimer.TextManager.getMenuItem(bluespheres.pause.buttonselected, 0x01, STRING_PAUSE_RESTART)
	BlueSpheresTimer.TextManager.drawText(px, py, 0xf000, 0x01, button_0x01, 0x01)
	
	py += 18
	string button_0x02 = BlueSpheresTimer.TextManager.getMenuItem(bluespheres.pause.buttonselected, 0x02, STRING_PAUSE_EXIT)
	BlueSpheresTimer.TextManager.drawText(px, py, 0xf000, 0x01, button_0x02, 0x01)
}