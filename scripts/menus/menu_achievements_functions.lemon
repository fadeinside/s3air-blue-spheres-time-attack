function void BlueSpheresTimer.Menu.achievements.headline()
{
	if (bluespheres.popup.show && SETTING_BS_MENU_OPTIMIZATION)
		return
	
	s32 offset = 243
	s32 px = getScreenWidth() / 0x02 - offset
	
	for (u8 A = 0x00; A < 0x04; ++A)
		BlueSpheresTimer.TextManager.drawText(px + (offset * A) - ((level.framecounter * 0x02) % offset), 25, 0xf000, 0x01, STRING_ACHIEVEMENTS_HEADLINE, 0x00)
}

function void BlueSpheresTimer.Menu.achievements.items()
{
	if (bluespheres.popup.show && SETTING_BS_MENU_OPTIMIZATION)
		return
	
	s32 px = getScreenWidth() / 0x02
	s32 py = 46
	
	BlueSpheresTimer.Menu.achievements.items.keys(px, py)
	BlueSpheresTimer.Menu.achievements.items.menu(px, py)
	
	BlueSpheresTimer.Menu.achievements.items.unlocked(px, py)
	BlueSpheresTimer.Menu.achievements.items.score(px, py)
	BlueSpheresTimer.Menu.achievements.items.sort(px, py)
	
	BlueSpheresTimer.Menu.achievements.items.achievements(px, py)
}

function void BlueSpheresTimer.Menu.achievements.items.keys(s32 px, s32 py)
{
	// Ignore if popup menu active
	if (bluespheres.popup.show)
		return
	
	// Set position
	px = 18
	py = getScreenHeight() - 18
	
	// Bools
	bool isBackButton = bluespheres.achievements.buttonselected == bluespheres.buttons.setup
	bool isExtraButtom = bluespheres.achievements.extraselected
	bool isAvailableAchievement = false
	for (u8 A = 0x00; A <= bluespheres.achievements.total; ++A)
	{
		if (bluespheres.achievements.buttonselected == A)
		{
			if !(BlueSpheresTimer.Achievements.getTitle(A) == STRING_ACHIEVEMENTS_LOCKED || BlueSpheresTimer.Achievements.getTitle(A) == STRING_ACHIEVEMENTS_UNKNOWN)
				isAvailableAchievement = true
		}
	}
	bool showStartButton = isAvailableAchievement || isBackButton || isExtraButtom
	
	bool SortAll = bluespheres.achievements.sortselected == 0x00
	bool isSortAvailableButtons = !(SortAll) && (bluespheres.achievements.totalButtons > 0x00)
	bool showUpDownButtons = (SortAll || isSortAvailableButtons) && !isExtraButtom
	
	BlueSpheresTimer.TextManager.drawKeyboard(px, py, 0xf000, "b")
	px += 13
	if (showStartButton)
	{
		BlueSpheresTimer.TextManager.drawKeyboard(px, py, 0xf000, "start")
		px += 18 // Additional offset by "start"
		px += 13
	}
	if (showUpDownButtons)
	{
		BlueSpheresTimer.TextManager.drawKeyboard_dual(px, py, 0xf000, "up", "down", 0x00)
	}
}

function void BlueSpheresTimer.Menu.achievements.items.menu(s32 px, s32 py)
{
	string button_back = BlueSpheresTimer.TextManager.getMenuItem(bluespheres.achievements.buttonselected, bluespheres.buttons.setup, STRING_BACK)
	BlueSpheresTimer.TextManager.drawText(px, getScreenHeight() - py, 0xf000, 0x01, button_back, 0x01)
	
	px += 128
	string button_medals = BlueSpheresTimer.TextManager.getMenuItem(bluespheres.achievements.buttonselected, bluespheres.buttons.setup + 0x01, STRING_ACHIEVEMENTS_MEDALS)
	BlueSpheresTimer.TextManager.drawText(px, getScreenHeight() - py, 0xf000, 0x01, button_medals, 0x01)
}

function void BlueSpheresTimer.Menu.achievements.items.achievements(s32 px, s32 py)
{
	BlueSpheresTimer.Menu.achievements.items.scrollbar()
	
	bool SortAll = bluespheres.achievements.sortselected == 0x00
	bool SortCompleted = bluespheres.achievements.sortselected == 0x01
	bool SortStarted = bluespheres.achievements.sortselected == 0x02
	bool SortLocked = bluespheres.achievements.sortselected == 0x03
	
	if (SortAll)
	{
		if (bluespheres.achievements.buttonselected >= 0x02 && !(bluespheres.achievements.buttonselected >= bluespheres.buttons.setup))
		{
			for (u8 A = 0x00; A <= bluespheres.achievements.buttonselected - 0x02; ++A)
				py -= 26
		}
	}
	else if (bluespheres.achievements.totalButtons > 0x00)
	{
		if (bluespheres.achievements.currentButtonScroll >= 0x02 && !(bluespheres.achievements.buttonselected >= bluespheres.buttons.setup))
		{
			for (u8 A = 0x00; A <= bluespheres.achievements.currentButtonScroll - 0x02; ++A)
				py -= 26
		}
	}
	
	px -= 164
	py += 0x08
	if (py >= -0x08)
	{
		u8 alpha = (py < 0x00) ? 48 : ((py < 16) ? 100 : ((py < 32) ? 150 : 255))
		BlueSpheresTimer.TextManager.drawText(px - 0x06, py, 0xf000, 0x02, "*", 0x01, alpha)
		
		s32 completed_total
		s32 started_total
		s32 not_started_total
		for (u8 A = 0x00; A <= bluespheres.achievements.total; ++A)
		{
			if (BlueSpheresTimer.Achievements.isComplete(A))
				completed_total += 0x01
			else if (BlueSpheresTimer.Achievements.getValue(A) > 0x00)
				started_total += 0x01
			else if (BlueSpheresTimer.Achievements.getValue(A) == 0x00)
				not_started_total += 0x01
		}
		
		string achievement_sort = SortAll ? STRING_ACHIEVEMENTS_SORT_ALL : (SortCompleted ? stringformat("%s (%d)", STRING_ACHIEVEMENTS_SORT_COMPLETED, completed_total) : (SortStarted ? stringformat("%s (%d)", STRING_ACHIEVEMENTS_SORT_STARTED, started_total) : (SortLocked ? stringformat("%s (%d)", STRING_ACHIEVEMENTS_SORT_LOCKED, not_started_total) : STRING_RETRY)))
		BlueSpheresTimer.TextManager.drawTextWithLine2(px + 16, py, 0xf000, 0x03, achievement_sort, 0x01, alpha)
	}
	
	if (!(SortAll) && (bluespheres.achievements.totalButtons == 0x00))
	{
		py += (getScreenHeight() / 0x02) - 48
		Renderer.drawCustomSprite("icon_completed_miles", px, py, 0x00, 0x40, 0xf000)
		
		px += 64
		s32 started_total
		for (u8 A = 0x00; A <= bluespheres.achievements.total; ++A)
		{
			if (!(BlueSpheresTimer.Achievements.isComplete(A)) && (BlueSpheresTimer.Achievements.getValue(A) > 0x00))
				started_total += 0x01
		}
		
		string sign_emptyList = SortCompleted ? STRING_ACHIEVEMENTS_SORT_EMPTY_COMPLETED : (SortStarted ? STRING_ACHIEVEMENTS_SORT_EMPTY_STARTED : (SortLocked && (started_total != 0x00) ? STRING_ACHIEVEMENTS_SORT_EMPTY_LOCKED2 : STRING_ACHIEVEMENTS_SORT_EMPTY_LOCKED))
		BlueSpheresTimer.TextManager.drawText(px + 16, py, 0xf000, 0x02, sign_emptyList, 0x01)
	}
	
	for (u8 A = 0x00; A <= bluespheres.achievements.total; ++A)
	{
		if (SortAll || (SortCompleted && BlueSpheresTimer.Achievements.isComplete(A)) || (SortStarted && BlueSpheresTimer.Achievements.getValue(A) > 0x00 && !BlueSpheresTimer.Achievements.isComplete(A)) || (SortLocked && BlueSpheresTimer.Achievements.getValue(A) == 0x00))
		{
			py += 26
			// This optimizes render by calculating only the data that is visible to the screen
			if !(py >= getScreenHeight() || py <= 0x00)
			{
				//debugLog(stringformat("ID : %d", A))
				u8 alpha = (py < 16 || py > getScreenHeight() - 16) ? 48 : ((py < 32 || py > getScreenHeight() - 32) ? 100 : ((py < 48 || py > getScreenHeight() - 48) ? 150 : ((py < 64 || py > getScreenHeight() - 64) ? 200 : 255)))
				
				string achievement_status = BlueSpheresTimer.Achievements.isComplete(A) ? "icon_trophy_outline" : "icon_trophy_lock"
				Renderer.drawCustomSprite(achievement_status, px, py, 0x00, 0x40, 0xf000, 0x00, alpha)
				
				// Make transparent for Locked/Unknown achievements
				if (BlueSpheresTimer.Achievements.getTitle(A) == STRING_ACHIEVEMENTS_LOCKED || BlueSpheresTimer.Achievements.getTitle(A) == STRING_ACHIEVEMENTS_MOD_REQUIRE || BlueSpheresTimer.Achievements.getTitle(A) == STRING_ACHIEVEMENTS_UNKNOWN)
					alpha -= alpha / 0x02
				
				string achievement_tag = BlueSpheresTimer.Achievements.getTags(A)
				BlueSpheresTimer.Achievements.Tags.drawTags(px + 16, py + 12, 0xf000, 0x02, achievement_tag, alpha)
				
				string button_achievement = (bluespheres.popup.show ? BlueSpheresTimer.Achievements.getTitle(A) : BlueSpheresTimer.TextManager.getMenuItem(bluespheres.achievements.buttonselected, A, BlueSpheresTimer.Achievements.getTitle(A)))
				BlueSpheresTimer.TextManager.drawText(px + 16, py, 0xf000, 0x02, button_achievement, 0x01, alpha)
				
				//debugLog(stringformat("Loaded RAM 0x%06x: %d", BlueSpheresTimer.Achievements.getAddress(A), BlueSpheresTimer.Achievements.getValue(A)))
			}
		}
	}
	//debugLog(stringformat("Current : %d. Sorted :: First : %d, Last : %d, Next : %d, Back : %d , Total : %d, Scroll : %d", bluespheres.achievements.buttonselected, bluespheres.achievements.firstButton, bluespheres.achievements.lastButton, bluespheres.achievements.nextButton, bluespheres.achievements.preButton, bluespheres.achievements.totalButtons, bluespheres.achievements.currentButtonScroll))
}

function void BlueSpheresTimer.Menu.achievements.items.scrollbar()
{
	// Ignore if popup menu active
	if (bluespheres.popup.show)
		return
		
	bool SortAll = bluespheres.achievements.sortselected == 0x00
	
	if (SortAll)
	{
		if (!bluespheres.achievements.extraselected && (control.pad1.state & (CONTROL_UP | CONTROL_DOWN)))
		{
			if ((bluespheres.achievements.buttonselected >= 0x02 && (bluespheres.achievements.buttonselected != bluespheres.buttons.setup)) || (bluespheres.achievements.buttonselected > 0x02 && (bluespheres.achievements.buttonselected == bluespheres.buttons.setup) && control.pad1.state & CONTROL_DOWN))
			{
				bluespheres.scrollbar.alpha = 0xff
				bluespheres.scrollbar.timer = 0x00
			}
		}
	}
	else if (bluespheres.achievements.totalButtons > 0x00)
	{
		if (!bluespheres.achievements.extraselected && (control.pad1.state & (CONTROL_UP | CONTROL_DOWN)))
		{
			if ((bluespheres.achievements.currentButtonScroll >= 0x02 && (bluespheres.achievements.currentButtonScroll != bluespheres.achievements.totalButtons + 0x01)) || (bluespheres.achievements.totalButtons > 0x02 && (bluespheres.achievements.currentButtonScroll == bluespheres.achievements.totalButtons + 0x01) && control.pad1.state & CONTROL_DOWN))
			{
				bluespheres.scrollbar.alpha = 0xff
				bluespheres.scrollbar.timer = 0x00
			}
		}
	}
	
	if (bluespheres.scrollbar.alpha != 0x00)
	{
		++bluespheres.scrollbar.timer
		if (bluespheres.scrollbar.timer >= 0x0a)
		{
			bluespheres.scrollbar.alpha -= bluespheres.scrollbar.timer
			if (bluespheres.scrollbar.timer >= 0x5a)
			{
				bluespheres.scrollbar.alpha = 0x00
				bluespheres.scrollbar.timer = 0x00
			}
		}
	}
	
	s32 scrollOffset
	if (SortAll)
		scrollOffset = ((getScreenHeight() - 88) / bluespheres.achievements.total) * ((bluespheres.achievements.buttonselected == bluespheres.buttons.setup) ? 0x00 : bluespheres.achievements.buttonselected)
	else
		scrollOffset = ((getScreenHeight() - 88) / bluespheres.achievements.totalButtons) * ((bluespheres.achievements.currentButtonScroll == bluespheres.achievements.totalButtons + 0x01) ? 0x00 : bluespheres.achievements.currentButtonScroll)
	
	Renderer.drawCustomSprite("icon_scrollbar", getScreenWidth(), 44 + scrollOffset, 0x00, 0x40, 0xf000, 0x00, bluespheres.scrollbar.alpha)
}

function void BlueSpheresTimer.Menu.achievements.items.sort(s32 px, s32 py)
{
	px += 128
	if (bluespheres.achievements.sortselected == 0x00)
		py += 88
	else
		py += 0x08
	
	BlueSpheresTimer.TextManager.drawTextWithKeys(px, py, 0xf000, 0x01, STRING_ACHIEVEMENTS_SORT, 0x01, "a", "")
}

function void BlueSpheresTimer.Menu.achievements.items.unlocked(s32 px, s32 py)
{
	if (bluespheres.achievements.sortselected != 0x00)
		return
	
	px += 128
	BlueSpheresTimer.TextManager.drawText(px, py, 0xf000, 0x01, STRING_ACHIEVEMENTS_UNLOCKED, 0x01)
	
	s32 completed_total
	for (u8 A = 0x00; A <= bluespheres.achievements.total; ++A)
	{
		if (BlueSpheresTimer.Achievements.isComplete(A))
			completed_total += 0x01
	}
	
	py += 16
	string sign_unlocked = (completed_total - 0x01 == bluespheres.achievements.total) ? stringformat("* %s *", STRING_ACHIEVEMENTS_ALL_UNLOCKED) : stringformat("* %d / %d *", completed_total, bluespheres.achievements.total + 0x01)
	BlueSpheresTimer.TextManager.drawText(px, py, 0xf000, 0x01, sign_unlocked, 0x01)
}

function void BlueSpheresTimer.Menu.achievements.items.score(s32 px, s32 py)
{
	if (bluespheres.achievements.sortselected != 0x00)
		return
	
	px += 128
	py += 44
	BlueSpheresTimer.TextManager.drawText(px, py, 0xf000, 0x01, STRING_ACHIEVEMENTS_SCORE, 0x01)
	
	py += 16
	s32 sign_score = BlueSpheresTimer.Achievements.getScore()
	BlueSpheresTimer.TextManager.drawText(px, py, 0xf000, 0x01, stringformat("* %d *", sign_score), 0x02)
}

function void BlueSpheresTimer.Menu.achievements.status(s32 data, s32 target)
{
	s32 px = getScreenWidth() / 0x02
	s32 py = 52 + ((getScreenHeight() / 0x02) - bluespheres.popup.offsetDescription)
	
	BlueSpheresTimer.TextManager.drawText(px, py, 0xf001, 0x01, STRING_ACHIEVEMENTS_STATUS, 0x01)
	
	py += 16
	string sign_status = BlueSpheresTimer.Achievements.isComplete(bluespheres.achievements.buttonselected) ? STRING_ACHIEVEMENTS_COMPLETE : ((BlueSpheresTimer.Achievements.getValue(bluespheres.achievements.buttonselected) > 0x00) ? stringformat("%d / %d", data, target): STRING_ACHIEVEMENTS_NOT_STARTED)
	BlueSpheresTimer.TextManager.drawText(px, py, 0xf001, 0x01, stringformat("* %s *", sign_status), 0x01)
	
	py += 16
	BlueSpheresTimer.Achievements.Tags.drawTags(px - 0x01, py, 0xf001, 0x01, BlueSpheresTimer.Achievements.getTags(bluespheres.achievements.buttonselected))
}

function void BlueSpheresTimer.Menu.achievements.status()
{
	s32 px = getScreenWidth() / 0x02
	s32 py = 52 + ((getScreenHeight() / 0x02) - bluespheres.popup.offsetDescription)
	
	BlueSpheresTimer.TextManager.drawText(px, py, 0xf001, 0x01, STRING_ACHIEVEMENTS_STATUS, 0x01)
	
	py += 16
	string sign_status = BlueSpheresTimer.Achievements.isComplete(bluespheres.achievements.buttonselected) ? STRING_ACHIEVEMENTS_COMPLETE : ((BlueSpheresTimer.Achievements.getValue(bluespheres.achievements.buttonselected) > 0x00) ? STRING_ACHIEVEMENTS_STARTED : STRING_ACHIEVEMENTS_NOT_STARTED)
	BlueSpheresTimer.TextManager.drawText(px, py, 0xf001, 0x01, stringformat("* %s *", sign_status), 0x01)
	
	py += 16
	BlueSpheresTimer.Achievements.Tags.drawTags(px - 0x01, py, 0xf001, 0x01, BlueSpheresTimer.Achievements.getTags(bluespheres.achievements.buttonselected))
}

function void BlueSpheresTimer.Menu.achievements.updateControl()
{
	// Ignore if popup menu active
	if (bluespheres.popup.show)
		return
	
	// Button selection with scrolling
	if (!bluespheres.achievements.extraselected && (control.pad1.state & (CONTROL_UP | CONTROL_DOWN)))
	{
		bool SortAll = bluespheres.achievements.sortselected == 0x00
		bool SortCompleted = bluespheres.achievements.sortselected == 0x01
		bool SortStarted = bluespheres.achievements.sortselected == 0x02
		bool SortLocked = bluespheres.achievements.sortselected == 0x03
	
		++bluespheres.buttons.scrollTimer
		if (bluespheres.buttons.scrollTimer >= 25)
		{
			if (bluespheres.buttons.scrollTimer >= 30)
			{
				if (SortAll)
				{
					playSound(0x5b)
					if (control.pad1.state & CONTROL_UP)
					{
						if (bluespheres.achievements.buttonselected != 0x00)
							--bluespheres.achievements.buttonselected
						else
							bluespheres.achievements.buttonselected = bluespheres.buttons.setup
					}
					else if (control.pad1.state & CONTROL_DOWN)
					{
						if (bluespheres.achievements.buttonselected < bluespheres.buttons.setup)
							++bluespheres.achievements.buttonselected
						else
							bluespheres.achievements.buttonselected = 0x00
					}
				}
				else if (bluespheres.achievements.totalButtons > 0x00)
				{
					playSound(0x5b)
					if !(control.pad1.state & CONTROL_UP)
						bluespheres.achievements.preButton = bluespheres.achievements.buttonselected
					else
					{
						if (bluespheres.achievements.buttonselected != bluespheres.achievements.firstButton)
						{
							for (u8 A = bluespheres.achievements.buttonselected; A >= 0x00; --A)
							{
								if ((SortAll || (SortCompleted && BlueSpheresTimer.Achievements.isComplete(A)) || (SortStarted && BlueSpheresTimer.Achievements.getValue(A) > 0x00 && !BlueSpheresTimer.Achievements.isComplete(A)) || (SortLocked && BlueSpheresTimer.Achievements.getValue(A) == 0x00)) && bluespheres.achievements.buttonselected > A)
								{
									bluespheres.achievements.preButton = A
									break
								}
							}
						}
					}
					
					if (control.pad1.state & CONTROL_UP)
					{
						if (bluespheres.achievements.buttonselected == bluespheres.buttons.setup)
						{
							bluespheres.achievements.currentButtonScroll = bluespheres.achievements.totalButtons - 0x01
							bluespheres.achievements.buttonselected = bluespheres.achievements.lastButton
						}
						else if (bluespheres.achievements.buttonselected != bluespheres.achievements.firstButton)
						{
							--bluespheres.achievements.currentButtonScroll
							bluespheres.achievements.buttonselected = bluespheres.achievements.preButton
						}
						else
						{
							bluespheres.achievements.currentButtonScroll = bluespheres.achievements.totalButtons + 0x01
							bluespheres.achievements.buttonselected = bluespheres.buttons.setup
						}
					}
					else if (control.pad1.state & CONTROL_DOWN)
					{
						if (bluespheres.achievements.buttonselected < bluespheres.buttons.setup)
						{
							if (bluespheres.achievements.buttonselected == bluespheres.achievements.lastButton)
							{
								bluespheres.achievements.currentButtonScroll = bluespheres.achievements.totalButtons + 0x01
								bluespheres.achievements.buttonselected = bluespheres.buttons.setup
							}
							else
							{
								++bluespheres.achievements.currentButtonScroll
								for (u8 A = 0x00; A <= bluespheres.achievements.total; ++A)
								{
									if ((SortAll || (SortCompleted && BlueSpheresTimer.Achievements.isComplete(A)) || (SortStarted && BlueSpheresTimer.Achievements.getValue(A) > 0x00 && !BlueSpheresTimer.Achievements.isComplete(A)) || (SortLocked && BlueSpheresTimer.Achievements.getValue(A) == 0x00)) && bluespheres.achievements.buttonselected < A)
									{
										bluespheres.achievements.nextButton = A
										bluespheres.achievements.buttonselected = A
										break
									}
								}
							}
						}
						else
						{
							bluespheres.achievements.currentButtonScroll = 0x00
							bluespheres.achievements.buttonselected = bluespheres.achievements.firstButton
						}
					}
				}
				
				bluespheres.buttons.scrollTimer = 25
			}
		}
	}
	else
	{
		bluespheres.buttons.scrollTimer = 0x00
	}
	
	// Button selection
	if (!bluespheres.achievements.extraselected && (control.pad1.pressed & (CONTROL_UP | CONTROL_DOWN)))
	{
		bool SortAll = bluespheres.achievements.sortselected == 0x00
		bool SortCompleted = bluespheres.achievements.sortselected == 0x01
		bool SortStarted = bluespheres.achievements.sortselected == 0x02
		bool SortLocked = bluespheres.achievements.sortselected == 0x03
	
		if (SortAll)
		{
			playSound(0x5b)
			if (control.pad1.pressed & CONTROL_UP)
			{
				if (bluespheres.achievements.buttonselected != 0x00)
					--bluespheres.achievements.buttonselected
				else
					bluespheres.achievements.buttonselected = bluespheres.buttons.setup
			}
			else if (control.pad1.pressed & CONTROL_DOWN)
			{
				if (bluespheres.achievements.buttonselected < bluespheres.buttons.setup)
					++bluespheres.achievements.buttonselected
				else
					bluespheres.achievements.buttonselected = 0x00
			}
		}
		else if (bluespheres.achievements.totalButtons > 0x00)
		{
			playSound(0x5b)
			if !(control.pad1.pressed & CONTROL_UP)
				bluespheres.achievements.preButton = bluespheres.achievements.buttonselected
			else
			{
				if (bluespheres.achievements.buttonselected != bluespheres.achievements.firstButton)
				{
					for (u8 A = bluespheres.achievements.buttonselected; A >= 0x00; --A)
					{
						if ((SortAll || (SortCompleted && BlueSpheresTimer.Achievements.isComplete(A)) || (SortStarted && BlueSpheresTimer.Achievements.getValue(A) > 0x00 && !BlueSpheresTimer.Achievements.isComplete(A)) || (SortLocked && BlueSpheresTimer.Achievements.getValue(A) == 0x00)) && bluespheres.achievements.buttonselected > A)
						{
							bluespheres.achievements.preButton = A
							break
						}
					}
				}
			}
			
			if (control.pad1.pressed & CONTROL_UP)
			{
				if (bluespheres.achievements.buttonselected == bluespheres.buttons.setup)
				{
					bluespheres.achievements.currentButtonScroll = bluespheres.achievements.totalButtons - 0x01
					bluespheres.achievements.buttonselected = bluespheres.achievements.lastButton
				}
				else if (bluespheres.achievements.buttonselected != bluespheres.achievements.firstButton)
				{
					--bluespheres.achievements.currentButtonScroll
					bluespheres.achievements.buttonselected = bluespheres.achievements.preButton
				}
				else
				{
					bluespheres.achievements.currentButtonScroll = bluespheres.achievements.totalButtons + 0x01
					bluespheres.achievements.buttonselected = bluespheres.buttons.setup
				}
			}
			else if (control.pad1.pressed & CONTROL_DOWN)
			{
				if (bluespheres.achievements.buttonselected < bluespheres.buttons.setup)
				{
					if (bluespheres.achievements.buttonselected == bluespheres.achievements.lastButton)
					{
						bluespheres.achievements.currentButtonScroll = bluespheres.achievements.totalButtons + 0x01
						bluespheres.achievements.buttonselected = bluespheres.buttons.setup
					}
					else
					{
						++bluespheres.achievements.currentButtonScroll
						for (u8 A = 0x00; A <= bluespheres.achievements.total; ++A)
						{
							if ((SortAll || (SortCompleted && BlueSpheresTimer.Achievements.isComplete(A)) || (SortStarted && BlueSpheresTimer.Achievements.getValue(A) > 0x00 && !BlueSpheresTimer.Achievements.isComplete(A)) || (SortLocked && BlueSpheresTimer.Achievements.getValue(A) == 0x00)) && bluespheres.achievements.buttonselected < A)
							{
								bluespheres.achievements.nextButton = A
								bluespheres.achievements.buttonselected = A
								break
							}
						}
					}
				}
				else
				{
					bluespheres.achievements.currentButtonScroll = 0x00
					bluespheres.achievements.buttonselected = bluespheres.achievements.firstButton
				}
			}
		}
	}
	
	// Button selection
	if ((bluespheres.achievements.buttonselected >= bluespheres.buttons.setup) && (control.pad1.pressed & (CONTROL_LEFT | CONTROL_RIGHT)))
	{
		u8 buttons.extra = bluespheres.buttons.setup + 0x01
		playSound(0x5b)
		
		++bluespheres.achievements.extraselected
		if (bluespheres.achievements.extraselected > 0x01)
			bluespheres.achievements.extraselected = 0x00
		
		if (control.pad1.pressed & CONTROL_LEFT)
		{
			if (bluespheres.achievements.buttonselected != bluespheres.buttons.setup)
				--bluespheres.achievements.buttonselected
			else
				bluespheres.achievements.buttonselected = buttons.extra
		}
		else if (control.pad1.pressed & CONTROL_RIGHT)
		{
			if (bluespheres.achievements.buttonselected < buttons.extra)
				++bluespheres.achievements.buttonselected
			else
				bluespheres.achievements.buttonselected = bluespheres.buttons.setup
		}
	}
	
	// Change the sort type
	if (Input.buttonPressed(BUTTON_X) || bluespheres.achievements.sortNeedUpdate)
	{
		if !(bluespheres.achievements.sortNeedUpdate)
		{
			playSound(0x5b)
			++bluespheres.achievements.sortselected
			if (bluespheres.achievements.sortselected > 0x03)
				bluespheres.achievements.sortselected = 0x00
		}
		
		bluespheres.achievements.totalButtons = 0x00
		bool SortAll = bluespheres.achievements.sortselected == 0x00
		bool SortCompleted = bluespheres.achievements.sortselected == 0x01
		bool SortStarted = bluespheres.achievements.sortselected == 0x02
		bool SortLocked = bluespheres.achievements.sortselected == 0x03
		
		// Define the number of available buttons (achievements) in sorted achievements
		for (u8 A = 0x00; A <= bluespheres.achievements.total; ++A)
		{
			if (SortAll || (SortCompleted && BlueSpheresTimer.Achievements.isComplete(A)) || (SortStarted && BlueSpheresTimer.Achievements.getValue(A) > 0x00 && !BlueSpheresTimer.Achievements.isComplete(A)) || (SortLocked && BlueSpheresTimer.Achievements.getValue(A) == 0x00))
			{
				++bluespheres.achievements.totalButtons
			}
			
			if (A >= bluespheres.achievements.total)
				break
		}
		
		// If there are buttons (achievements) available
		if (bluespheres.achievements.totalButtons > 0x00)
		{
			// Define the first button (first achievement) in the sorted achievements
			for (u8 A = 0x00; A <= bluespheres.achievements.total; ++A)
			{
				if (SortAll || (SortCompleted && BlueSpheresTimer.Achievements.isComplete(A)) || (SortStarted && BlueSpheresTimer.Achievements.getValue(A) > 0x00 && !BlueSpheresTimer.Achievements.isComplete(A)) || (SortLocked && BlueSpheresTimer.Achievements.getValue(A) == 0x00))
				{
					bluespheres.achievements.firstButton = A
					break
				}
			}
			
			// Define the last button (last achievement) in the sorted achievements and the rest of the dependent
			for (u8 A = bluespheres.achievements.total; A >= 0x00; --A)
			{
				if (SortAll || (SortCompleted && BlueSpheresTimer.Achievements.isComplete(A)) || (SortStarted && BlueSpheresTimer.Achievements.getValue(A) > 0x00 && !BlueSpheresTimer.Achievements.isComplete(A)) || (SortLocked && BlueSpheresTimer.Achievements.getValue(A) == 0x00))
				{
					bluespheres.buttons.setup = A + 0x01
					
					bluespheres.achievements.currentButtonScroll = bluespheres.achievements.totalButtons + 0x01
					if (bluespheres.achievements.extraselected)
						bluespheres.achievements.buttonselected = bluespheres.buttons.setup + 0x01
					else
						bluespheres.achievements.buttonselected = bluespheres.buttons.setup
					
					bluespheres.achievements.lastButton = A
					bluespheres.achievements.preButton = A
					break
				}
			}
			
			// Define the next button (next achievement) in the sorted achievements
			for (u8 A = 0x00; A <= bluespheres.achievements.total; ++A)
			{
				if ((SortAll || (SortCompleted && BlueSpheresTimer.Achievements.isComplete(A)) || (SortStarted && BlueSpheresTimer.Achievements.getValue(A) > 0x00 && !BlueSpheresTimer.Achievements.isComplete(A)) || (SortLocked && BlueSpheresTimer.Achievements.getValue(A) == 0x00)) && bluespheres.achievements.firstButton < A)
				{
					bluespheres.achievements.nextButton = A
					break
				}
			}
			
			// Reset variables when switching back to "ALL" sort type
			if (SortAll)
			{
				bluespheres.buttons.setup = bluespheres.achievements.total + 0x01
				
				bluespheres.achievements.firstButton = 0x00
				bluespheres.achievements.lastButton = 0x00
				bluespheres.achievements.nextButton = 0x00
				bluespheres.achievements.preButton = 0x00
				bluespheres.achievements.totalButtons = 0x00
				
				bluespheres.achievements.currentButtonScroll = 0x00
			}
		}
		else if !(SortAll)
		{
			// Define the "Back" button if there are no buttons in the sorted achievements
			bluespheres.buttons.setup = 0x01
			if (bluespheres.achievements.extraselected)
				bluespheres.achievements.buttonselected = bluespheres.buttons.setup + 0x01
			else
				bluespheres.achievements.buttonselected = bluespheres.buttons.setup
		}
		
		// After all these steps, reset the sort update if it is active
		if (bluespheres.achievements.sortNeedUpdate)
			bluespheres.achievements.sortNeedUpdate = false
	}
	
	// Perform the action of selected button when start pressed
	if (control.pad1.pressed & CONTROL_START)
	{
		if (bluespheres.achievements.buttonselected == bluespheres.buttons.setup)
		{
			playSound(0x63)
			global.game_mode = 0x85
		}
		if (bluespheres.achievements.buttonselected == bluespheres.buttons.setup + 0x01)
		{
			playSound(0x63)
			global.game_mode = 0x8a
		}
		for (u8 A = 0x00; A <= bluespheres.achievements.total; ++A)
		{
			if (bluespheres.achievements.buttonselected == A && (bluespheres.achievements.buttonselected < bluespheres.buttons.setup))
			{
				if !(BlueSpheresTimer.Achievements.getTitle(A) == STRING_ACHIEVEMENTS_LOCKED || BlueSpheresTimer.Achievements.getTitle(A) == STRING_ACHIEVEMENTS_UNKNOWN)
				{
					playSound(0x63)
					bluespheres.popup.show = 0x01
					waitForNextFrame()
				}
				else
				{
					playSound(0x7b)
				}
			}
		}
	}
	
	// Go back to the time attack menu
	if (control.pad1.pressed & CONTROL_B)
	{
		playSound(0xad)
		if (bluespheres.backToLobby)
			global.game_mode = 0x89
		else
			global.game_mode = 0x85
	}
}

function void BlueSpheresTimer.Menu.achievements.popups()
{
	if !(bluespheres.popup.show)
		return
		
	if (control.pad1.pressed & CONTROL_START)
	{
		playSound(0x63)
		bluespheres.popup.show = 0x00
	}
	
	s32 target
	if (bluespheres.achievements.buttonselected >= ACHIEVEMENT_BS_GET_100_BLUE_SPHERES && bluespheres.achievements.buttonselected <= ACHIEVEMENT_BS_GET_2048_BLUE_SPHERES)
	{
		if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_GET_100_BLUE_SPHERES)
			target = 100
		else if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_GET_300_BLUE_SPHERES)
			target = 300
		else if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_GET_600_BLUE_SPHERES)
			target = 600
		else if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_GET_1200_BLUE_SPHERES)
			target = 1200
		else if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_GET_2048_BLUE_SPHERES)
			target = 2048
		
		BlueSpheresTimer.Menu.popup.show(stringformat(STRING_ACHIEVEMENT_BS_GET_100_BLUE_SPHERES.LINE1, target), "", "", "", STRING_CLOSE)
		BlueSpheresTimer.Menu.achievements.status(BlueSpheresTimer.Achievements.getValue(bluespheres.achievements.buttonselected), target)
	}
	else if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_RAN_INTO_RED_SPHERE)
	{
		BlueSpheresTimer.Menu.popup.show(STRING_ACHIEVEMENT_BS_RAN_INTO_RED_SPHERE.LINE1, STRING_ACHIEVEMENT_BS_RAN_INTO_RED_SPHERE.LINE2, STRING_ACHIEVEMENT_BS_RAN_INTO_RED_SPHERE.LINE3, STRING_ACHIEVEMENT_BS_RAN_INTO_RED_SPHERE.LINE4, STRING_CLOSE)
		BlueSpheresTimer.Menu.achievements.status()
	}
	else if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_RAN_INTO_RED_SPHERE2)
	{
		BlueSpheresTimer.Menu.popup.show(STRING_ACHIEVEMENT_BS_RAN_INTO_RED_SPHERE2.LINE1, STRING_ACHIEVEMENT_BS_RAN_INTO_RED_SPHERE2.LINE2, "", "", STRING_CLOSE)
		BlueSpheresTimer.Menu.achievements.status()
	}
	else if (bluespheres.achievements.buttonselected >= ACHIEVEMENT_BS_DA_GARDEN_EDITION && bluespheres.achievements.buttonselected <= ACHIEVEMENT_BS_CONVERT_1200_GREEN_SPHERES)
	{
		if (Mods.isModActive("Sonic 3: D.A. Garden Edition") || BlueSpheresTimer.Achievements.isComplete(bluespheres.achievements.buttonselected))
		{
			if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_DA_GARDEN_EDITION)
			{
				BlueSpheresTimer.Menu.popup.show(stringformat(STRING_ACHIEVEMENT_BS_DA_GARDEN_EDITION.LINE1, "Sonic 3: D.A. Garden Edition"), STRING_ACHIEVEMENT_BS_DA_GARDEN_EDITION.LINE2, "", "", STRING_CLOSE)
				BlueSpheresTimer.Menu.achievements.status()
			}
			else if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_GREEN_SPHERE)
			{
				BlueSpheresTimer.Menu.popup.show(STRING_ACHIEVEMENT_BS_GREEN_SPHERE.LINE1, STRING_ACHIEVEMENT_BS_GREEN_SPHERE.LINE2, "", "", STRING_CLOSE)
				BlueSpheresTimer.Menu.achievements.status()
			}
			else if (bluespheres.achievements.buttonselected >= ACHIEVEMENT_BS_CONVERT_50_GREEN_SPHERES && bluespheres.achievements.buttonselected <= ACHIEVEMENT_BS_CONVERT_1200_GREEN_SPHERES)
			{
				if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_CONVERT_50_GREEN_SPHERES)
					target = 50
				else if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_CONVERT_150_GREEN_SPHERES)
					target = 150
				else if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_CONVERT_400_GREEN_SPHERES)
					target = 400
				else if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_CONVERT_720_GREEN_SPHERES)
					target = 720
				else if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_CONVERT_1200_GREEN_SPHERES)
					target = 1200
				
				BlueSpheresTimer.Menu.popup.show(stringformat(STRING_ACHIEVEMENT_BS_CONVERT_50_GREEN_SPHERES.LINE1, target), STRING_ACHIEVEMENT_BS_CONVERT_50_GREEN_SPHERES.LINE2, "", "", STRING_CLOSE)
				BlueSpheresTimer.Menu.achievements.status(BlueSpheresTimer.Achievements.getValue(bluespheres.achievements.buttonselected), target)
			}
		}
		else
		{
			BlueSpheresTimer.Menu.popup.show("https://gamebanana.com/mods/151029", STRING_ACHIEVEMENTS_YOU_CAN_INSTALL, stringformat(STRING_ACHIEVEMENTS_MOD_NAME_REQUIRE, "Sonic 3: D.A. Garden Edition"), "", STRING_CLOSE)
		}
	}
	else if (bluespheres.achievements.buttonselected >= ACHIEVEMENT_BS_BOUNCE_OFF_15_TIMES && bluespheres.achievements.buttonselected <= ACHIEVEMENT_BS_BOUNCE_OFF_150_TIMES)
	{
		if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_BOUNCE_OFF_15_TIMES)
			target = 15
		else if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_BOUNCE_OFF_55_TIMES)
			target = 55
		else if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_BOUNCE_OFF_150_TIMES)
			target = 150
		
		BlueSpheresTimer.Menu.popup.show(stringformat(STRING_ACHIEVEMENT_BS_BOUNCE_OFF_15_TIMES.LINE1, target), STRING_ACHIEVEMENT_BS_BOUNCE_OFF_15_TIMES.LINE2, "", "", STRING_CLOSE)
		BlueSpheresTimer.Menu.achievements.status(BlueSpheresTimer.Achievements.getValue(bluespheres.achievements.buttonselected), target)
	}
	else if (bluespheres.achievements.buttonselected >= ACHIEVEMENT_BS_USE_YELLOW_SPHERE_15_TIMES && bluespheres.achievements.buttonselected <= ACHIEVEMENT_BS_USE_YELLOW_SPHERE_110_TIMES)
	{
		if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_USE_YELLOW_SPHERE_15_TIMES)
			target = 15
		else if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_USE_YELLOW_SPHERE_45_TIMES)
			target = 45
		else if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_USE_YELLOW_SPHERE_110_TIMES)
			target = 110
		
		BlueSpheresTimer.Menu.popup.show(stringformat(STRING_ACHIEVEMENT_BS_USE_YELLOW_SPHERE_15_TIMES.LINE1, target), STRING_ACHIEVEMENT_BS_USE_YELLOW_SPHERE_15_TIMES.LINE2, "", "", STRING_CLOSE)
		BlueSpheresTimer.Menu.achievements.status(BlueSpheresTimer.Achievements.getValue(bluespheres.achievements.buttonselected), target)
	}
	else if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_YOU_ARE_TOO_SLOW)
	{
		if (Mods.isModActive("No Blue Spheres Slowdown") || BlueSpheresTimer.Achievements.isComplete(bluespheres.achievements.buttonselected))
		{
			BlueSpheresTimer.Menu.popup.show(stringformat(STRING_ACHIEVEMENT_BS_YOU_ARE_TOO_SLOW.LINE1, "No Blue Spheres Slowdown"), STRING_ACHIEVEMENT_BS_YOU_ARE_TOO_SLOW.LINE2, "", "", STRING_CLOSE)
			BlueSpheresTimer.Menu.achievements.status(BlueSpheresTimer.Achievements.getValue(bluespheres.achievements.buttonselected), 0x07)
		}
		else
		{
			BlueSpheresTimer.Menu.popup.show("https://gamebanana.com/mods/54087", STRING_ACHIEVEMENTS_YOU_CAN_INSTALL, stringformat(STRING_ACHIEVEMENTS_MOD_NAME_REQUIRE, "No Blue Spheres Slowdown"), "", STRING_CLOSE)
		}
	}
	else if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_ACTIVATED_SUPER_EMERALDS)
	{
		BlueSpheresTimer.Menu.popup.show(STRING_ACHIEVEMENT_BS_ACTIVATED_SUPER_EMERALDS.LINE1, STRING_ACHIEVEMENT_BS_ACTIVATED_SUPER_EMERALDS.LINE2, "", "", STRING_CLOSE)
		BlueSpheresTimer.Menu.achievements.status(BlueSpheresTimer.Achievements.getValue(bluespheres.achievements.buttonselected), 0x08)
	}
	else if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_ALL_CHAOS_EMERALDS)
	{
		BlueSpheresTimer.Menu.popup.show(STRING_ACHIEVEMENT_BS_ALL_CHAOS_EMERALDS.LINE1, STRING_ACHIEVEMENT_BS_ALL_CHAOS_EMERALDS.LINE2, "", "", STRING_CLOSE)
		BlueSpheresTimer.Menu.achievements.status(BlueSpheresTimer.Achievements.getValue(bluespheres.achievements.buttonselected), 0x07)
	}
	else if (bluespheres.achievements.buttonselected >= ACHIEVEMENT_BS_JUMP_50_TIMES && bluespheres.achievements.buttonselected <= ACHIEVEMENT_BS_JUMP_1000_TIMES)
	{
		if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_JUMP_50_TIMES)
			target = 50
		else if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_JUMP_200_TIMES)
			target = 200
		else if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_JUMP_500_TIMES)
			target = 500
		else if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_JUMP_1000_TIMES)
			target = 1000
		
		BlueSpheresTimer.Menu.popup.show(stringformat(STRING_ACHIEVEMENT_BS_JUMP_50_TIMES.LINE1, target), "", "", "", STRING_CLOSE)
		BlueSpheresTimer.Menu.achievements.status(BlueSpheresTimer.Achievements.getValue(bluespheres.achievements.buttonselected), target)
	}
	else if (bluespheres.achievements.buttonselected >= ACHIEVEMENT_BS_COLLECT_400_RINGS && bluespheres.achievements.buttonselected <= ACHIEVEMENT_BS_COLLECT_4000_RINGS)
	{
		if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_COLLECT_400_RINGS)
			target = 400
		if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_COLLECT_800_RINGS)
			target = 800
		else if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_COLLECT_1200_RINGS)
			target = 1200
		else if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_COLLECT_2000_RINGS)
			target = 2000
		else if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_COLLECT_4000_RINGS)
			target = 4000
		
		BlueSpheresTimer.Menu.popup.show(stringformat(STRING_ACHIEVEMENT_BS_COLLECT_400_RINGS.LINE1, target), "", "", "", STRING_CLOSE)
		BlueSpheresTimer.Menu.achievements.status(BlueSpheresTimer.Achievements.getValue(bluespheres.achievements.buttonselected), target)
	}
	else if (bluespheres.achievements.buttonselected >= ACHIEVEMENT_BS_GET_5_CONTINUES && bluespheres.achievements.buttonselected <= ACHIEVEMENT_BS_GET_50_CONTINUES)
	{
		if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_GET_5_CONTINUES)
			target = 5
		else if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_GET_15_CONTINUES)
			target = 15
		else if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_GET_30_CONTINUES)
			target = 30
		else if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_GET_50_CONTINUES)
			target = 50
		
		BlueSpheresTimer.Menu.popup.show(stringformat(STRING_ACHIEVEMENT_BS_GET_5_CONTINUES.LINE1, target), "", "", "", STRING_CLOSE)
		BlueSpheresTimer.Menu.achievements.status(BlueSpheresTimer.Achievements.getValue(bluespheres.achievements.buttonselected), target)
	}
	else if (bluespheres.achievements.buttonselected >= ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_10 && bluespheres.achievements.buttonselected <= ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_220)
	{
		if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_10)
			target = 10
		else if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_50)
			target = 50
		else if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_100)
			target = 100
		else if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_220)
			target = 220
		
		BlueSpheresTimer.Menu.popup.show(stringformat(STRING_ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_10.LINE1, target), STRING_ACHIEVEMENT_BS_JUMP_OVER_REDSPHERE_10.LINE2, "", "", STRING_CLOSE)
		BlueSpheresTimer.Menu.achievements.status(BlueSpheresTimer.Achievements.getValue(bluespheres.achievements.buttonselected), target)
	}
	else if (bluespheres.achievements.buttonselected == ACHIEVEMENT_BS_PLUS_COMPLETE_MARATHON)
	{
		if (Mods.isModActive("Blue Sphere Plus") || BlueSpheresTimer.Achievements.isComplete(bluespheres.achievements.buttonselected))
		{
			BlueSpheresTimer.Menu.popup.show(stringformat(STRING_ACHIEVEMENT_BS_PLUS_COMPLETE_MARATHON.LINE1, "Blue Sphere Plus"), STRING_ACHIEVEMENT_BS_PLUS_COMPLETE_MARATHON.LINE2, STRING_ACHIEVEMENT_BS_PLUS_COMPLETE_MARATHON.LINE3, "", STRING_CLOSE)
			BlueSpheresTimer.Menu.achievements.status()
		}
		else
		{
			BlueSpheresTimer.Menu.popup.show("https://gamebanana.com/mods/297356", STRING_ACHIEVEMENTS_YOU_CAN_INSTALL, stringformat(STRING_ACHIEVEMENTS_MOD_NAME_REQUIRE, "Blue Sphere Plus"), "", STRING_CLOSE)
		}
	}
	else
	{
		bluespheres.popup.show = 0x00
	}
}